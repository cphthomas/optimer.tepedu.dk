{"ast":null,"code":"/*global require*/\nvar Tableau = require(\"./Tableau.js\");\n\nTableau.prototype.copy = function () {\n  var copy = new Tableau(this.precision);\n  copy.width = this.width;\n  copy.height = this.height;\n  copy.nVars = this.nVars;\n  copy.model = this.model; // Making a shallow copy of integer variable indexes\n  // and variable ids\n\n  copy.variables = this.variables;\n  copy.variablesPerIndex = this.variablesPerIndex;\n  copy.unrestrictedVars = this.unrestrictedVars;\n  copy.lastElementIndex = this.lastElementIndex; // All the other arrays are deep copied\n\n  copy.varIndexByRow = this.varIndexByRow.slice();\n  copy.varIndexByCol = this.varIndexByCol.slice();\n  copy.rowByVarIndex = this.rowByVarIndex.slice();\n  copy.colByVarIndex = this.colByVarIndex.slice();\n  copy.availableIndexes = this.availableIndexes.slice();\n  var optionalObjectivesCopy = [];\n\n  for (var o = 0; o < this.optionalObjectives.length; o++) {\n    optionalObjectivesCopy[o] = this.optionalObjectives[o].copy();\n  }\n\n  copy.optionalObjectives = optionalObjectivesCopy;\n  var matrix = this.matrix;\n  var matrixCopy = new Array(this.height);\n\n  for (var r = 0; r < this.height; r++) {\n    matrixCopy[r] = matrix[r].slice();\n  }\n\n  copy.matrix = matrixCopy;\n  return copy;\n};\n\nTableau.prototype.save = function () {\n  this.savedState = this.copy();\n};\n\nTableau.prototype.restore = function () {\n  if (this.savedState === null) {\n    return;\n  }\n\n  var save = this.savedState;\n  var savedMatrix = save.matrix;\n  this.nVars = save.nVars;\n  this.model = save.model; // Shallow restore\n\n  this.variables = save.variables;\n  this.variablesPerIndex = save.variablesPerIndex;\n  this.unrestrictedVars = save.unrestrictedVars;\n  this.lastElementIndex = save.lastElementIndex;\n  this.width = save.width;\n  this.height = save.height; // Restoring matrix\n\n  var r, c;\n\n  for (r = 0; r < this.height; r += 1) {\n    var savedRow = savedMatrix[r];\n    var row = this.matrix[r];\n\n    for (c = 0; c < this.width; c += 1) {\n      row[c] = savedRow[c];\n    }\n  } // Restoring all the other structures\n\n\n  var savedBasicIndexes = save.varIndexByRow;\n\n  for (c = 0; c < this.height; c += 1) {\n    this.varIndexByRow[c] = savedBasicIndexes[c];\n  }\n\n  while (this.varIndexByRow.length > this.height) {\n    this.varIndexByRow.pop();\n  }\n\n  var savedNonBasicIndexes = save.varIndexByCol;\n\n  for (r = 0; r < this.width; r += 1) {\n    this.varIndexByCol[r] = savedNonBasicIndexes[r];\n  }\n\n  while (this.varIndexByCol.length > this.width) {\n    this.varIndexByCol.pop();\n  }\n\n  var savedRows = save.rowByVarIndex;\n  var savedCols = save.colByVarIndex;\n\n  for (var v = 0; v < this.nVars; v += 1) {\n    this.rowByVarIndex[v] = savedRows[v];\n    this.colByVarIndex[v] = savedCols[v];\n  }\n\n  if (save.optionalObjectives.length > 0 && this.optionalObjectives.length > 0) {\n    this.optionalObjectives = [];\n    this.optionalObjectivePerPriority = {};\n\n    for (var o = 0; o < save.optionalObjectives.length; o++) {\n      var optionalObjectiveCopy = save.optionalObjectives[o].copy();\n      this.optionalObjectives[o] = optionalObjectiveCopy;\n      this.optionalObjectivePerPriority[optionalObjectiveCopy.priority] = optionalObjectiveCopy;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
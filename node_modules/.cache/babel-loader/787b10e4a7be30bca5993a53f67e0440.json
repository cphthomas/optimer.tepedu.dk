{"ast":null,"code":"/*global describe*/\n\n/*global require*/\n\n/*global module*/\n\n/*global it*/\n\n/*global console*/\n\n/*global process*/\n\n/*global exports*/\n// All functions in this module that\n// get exported to main ***MUST***\n// return a functional LPSolve JSON style\n// model or throw an error\nexports.CleanObjectiveAttributes = function (model) {\n  // Test to see if the objective attribute\n  // is also used by one of the constraints\n  //\n  // If so...create a new attribute on each\n  // variable\n  var fakeAttr, x, z;\n\n  if (typeof model.optimize === \"string\") {\n    if (model.constraints[model.optimize]) {\n      // Create the new attribute\n      fakeAttr = Math.random(); // Go over each variable and check\n\n      for (x in model.variables) {\n        // Is it there?\n        if (model.variables[x][model.optimize]) {\n          model.variables[x][fakeAttr] = model.variables[x][model.optimize];\n        }\n      } // Now that we've cleaned up the variables\n      // we need to clean up the constraints\n\n\n      model.constraints[fakeAttr] = model.constraints[model.optimize];\n      delete model.constraints[model.optimize];\n      return model;\n    } else {\n      return model;\n    }\n  } else {\n    // We're assuming its an object?\n    for (z in model.optimize) {\n      if (model.constraints[z]) {\n        // Make sure that the constraint\n        // being optimized isn't constrained\n        // by an equity collar\n        if (model.constraints[z] === \"equal\") {\n          // Its constrained by an equal sign;\n          // delete that objective and move on\n          delete model.optimize[z];\n        } else {\n          // Create the new attribute\n          fakeAttr = Math.random(); // Go over each variable and check\n\n          for (x in model.variables) {\n            // Is it there?\n            if (model.variables[x][z]) {\n              model.variables[x][fakeAttr] = model.variables[x][z];\n            }\n          } // Now that we've cleaned up the variables\n          // we need to clean up the constraints\n\n\n          model.constraints[fakeAttr] = model.constraints[z];\n          delete model.constraints[z];\n        }\n      }\n    }\n\n    return model;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/*global module*/\nfunction Solution(tableau, evaluation, feasible, bounded) {\n  this.feasible = feasible;\n  this.evaluation = evaluation;\n  this.bounded = bounded;\n  this._tableau = tableau;\n}\n\nmodule.exports = Solution;\n\nSolution.prototype.generateSolutionSet = function () {\n  var solutionSet = {};\n  var tableau = this._tableau;\n  var varIndexByRow = tableau.varIndexByRow;\n  var variablesPerIndex = tableau.variablesPerIndex;\n  var matrix = tableau.matrix;\n  var rhsColumn = tableau.rhsColumn;\n  var lastRow = tableau.height - 1;\n  var roundingCoeff = Math.round(1 / tableau.precision);\n\n  for (var r = 1; r <= lastRow; r += 1) {\n    var varIndex = varIndexByRow[r];\n    var variable = variablesPerIndex[varIndex];\n\n    if (variable === undefined || variable.isSlack === true) {\n      continue;\n    }\n\n    var varValue = matrix[r][rhsColumn];\n    solutionSet[variable.id] = Math.round((Number.EPSILON + varValue) * roundingCoeff) / roundingCoeff;\n  }\n\n  return solutionSet;\n};","map":null,"metadata":{},"sourceType":"script"}
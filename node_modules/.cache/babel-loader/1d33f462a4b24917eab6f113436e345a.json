{"ast":null,"code":"import _slicedToArray from \"/Users/thomas/GIT/GEMINI_optimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomas/GIT/GEMINI_optimer/src/optimering2.js\";\nimport React, { useState, useEffect } from 'react';\nimport Toggle from './ToggleRenderProps';\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\nimport 'chartjs-plugin-annotation';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport './styles.css';\nimport { numberFormat1, numberFormat2, numberFormat3, numberFormat4, numberFormat5, numberFormat6 } from './lib';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import modules separately - DO NOT initialize yet\n\nimport exporting from 'highcharts/modules/exporting';\nimport annotations from 'highcharts/modules/annotations';\nimport highchartsMore from 'highcharts/highcharts-more';\nexport function optimering2() {\n  // Initialize modules inside useEffect ONCE\n  useEffect(function () {\n    console.log(\"Initializing Highcharts modules...\");\n    exporting(Highcharts); // Initialize exporting module\n\n    annotations(Highcharts); // Initialize annotations module\n\n    highchartsMore(Highcharts); // Initialize highcharts-more\n    // If pattern-fill-v2 is imported, initialize it here too\n    // patternFill(Highcharts); // Example\n    // Or if pattern-fill is loaded via a script tag, try accessing Highcharts\n    // This is less ideal but might be necessary depending on how pattern-fill works\n\n    if (typeof window.PatternFill !== 'undefined') {\n      console.log(\"Attempting to initialize pattern-fill globally?\"); // You might need a specific initialization method for pattern-fill\n    }\n\n    console.log(\"Highcharts modules initialized.\");\n  }, []); // Empty dependency array ensures this runs only once\n\n  var _useState = useState(+(-1).toFixed(2)),\n      _useState2 = _slicedToArray(_useState, 2),\n      a = _useState2[0],\n      seta = _useState2[1];\n\n  var _useState3 = useState(+(-0.5).toFixed(2)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      aop = _useState4[0],\n      setaop = _useState4[1];\n\n  var _useState5 = useState(+100 .toFixed(2)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bop = _useState6[0],\n      setbop = _useState6[1];\n\n  var _useState7 = useState(+(-1).toFixed(2)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      aned = _useState8[0],\n      setaned = _useState8[1];\n\n  var _useState9 = useState(+125 .toFixed(2)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bned = _useState10[0],\n      setbned = _useState10[1];\n\n  var _useState11 = useState(+Infinity),\n      _useState12 = _slicedToArray(_useState11, 2),\n      knækmængde = _useState12[0],\n      setknækmængde = _useState12[1];\n\n  var _useState13 = useState(+20 .toFixed(2)),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ordre = _useState14[0],\n      setordre = _useState14[1];\n\n  var _useState15 = useState(+64 .toFixed(2)),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ordrepris = _useState16[0],\n      setordrepris = _useState16[1];\n\n  var _useState17 = useState(+Infinity),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ordremængde = _useState18[0],\n      setordremængde = _useState18[1];\n\n  var _useState19 = useState(+100 .toFixed(2)),\n      _useState20 = _slicedToArray(_useState19, 2),\n      b = _useState20[0],\n      setb = _useState20[1];\n\n  var _useState21 = useState(+0.5.toFixed(2)),\n      _useState22 = _slicedToArray(_useState21, 2),\n      ag = _useState22[0],\n      setag = _useState22[1];\n\n  var _useState23 = useState(+50 .toFixed(2)),\n      _useState24 = _slicedToArray(_useState23, 2),\n      bg = _useState24[0],\n      setbg = _useState24[1];\n\n  var _useState25 = useState(+Infinity),\n      _useState26 = _slicedToArray(_useState25, 2),\n      gskift = _useState26[0],\n      setgskift = _useState26[1];\n\n  var _useState27 = useState(+0 .toFixed(2)),\n      _useState28 = _slicedToArray(_useState27, 2),\n      ag2 = _useState28[0],\n      setag2 = _useState28[1];\n\n  var _useState29 = useState(+0 .toFixed(2)),\n      _useState30 = _slicedToArray(_useState29, 2),\n      bg2 = _useState30[0],\n      setbg2 = _useState30[1];\n\n  var _useState31 = useState(+Infinity),\n      _useState32 = _slicedToArray(_useState31, 2),\n      kap = _useState32[0],\n      setkap = _useState32[1];\n\n  var _useState33 = useState(+0 .toFixed(2)),\n      _useState34 = _slicedToArray(_useState33, 2),\n      reklame = _useState34[0],\n      setreklame = _useState34[1];\n\n  var knækpris = aop * knækmængde + bop;\n  var knækgromsop = 2 * aop * knækmængde + bop;\n  var knækgromsned = 2 * aned * knækmængde + bned;\n\n  if (reklame !== 0) {\n    var audenreklame = a;\n    a = a / (1 + reklame / 100);\n    var reklamenævner = +100 + +reklame;\n    var reklamenævnerdecimal = (+100 + +reklame) / 100;\n  }\n\n  var maxx, maxy;\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    maxx = -b / a;\n    maxy = Math.max(b, 0.5 * ag * (-b / a) + bg + ordre);\n  } else {\n    if (ordremængde !== Infinity) {\n      maxx = -0.5 * b / a + +ordre;\n      maxy = Math.max(b, 0.5 * ag * (-b / a) + bg);\n    } else {\n      maxx = -bned / aned;\n      maxy = Math.max(bop, 0.5 * ag * (-bop / aop) + bg);\n    }\n  }\n\n  var ordreknæk1 = (+ordrepris - b) / (2 * a);\n  var oxfirst, ox1;\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    oxfirst = Math.max(0, (bg - b) / (2 * a - ag));\n    ox1 = Math.max(0, Math.min(2 * a < ag ? (bg - b) / (2 * a - ag) : kap, gskift, -0.5 * b / a, +kap));\n  }\n\n  if (ordremængde !== Infinity) {\n    oxfirst = Math.max(0, (bg - b) / (2 * a - ag));\n    ox1 = Math.max(0, Math.min((bg - b) / (2 * a - ag) <= ordreknæk1 ? (+bg - b) / (2 * a - ag) : +kap, (bg - b) / (2 * a - ag) > ordreknæk1 && (b - 2 * a * ordremængde - bg) / (ag - 2 * a) <= ordreknæk1 + +ordre ? (ordrepris - bg) / ag : +kap, (b - 2 * a * ordremængde - bg) / (ag - 2 * a) > +ordreknæk1 + +ordre ? (b - 2 * a * +ordre - bg) / (ag - 2 * a) : +kap, -(b - 2 * a * ordre) / (2 * a), gskift, +kap));\n  }\n\n  if (+knækmængde !== Infinity && ordremængde === Infinity) {\n    if (ag * +knækmængde + bg > +knækgromsop) {\n      oxfirst = Math.max(0, (bg - +bop) / (2 * +aop - ag));\n      ox1 = Math.max(0, Math.min((bg - +bop) / (2 * +aop - ag), -0.5 * bop / aop, +gskift, +kap));\n    } else {\n      if (ag * knækmængde + bg < knækgromsned && ordremængde === Infinity) {\n        oxfirst = Math.max(0, (bg - bned) / (2 * aned - ag));\n        ox1 = Math.max(0, Math.min(2 * aned < +ag ? (bg - +bned) / (2 * aned - ag) : +kap, Math.max(knækmængde, -0.5 * bned / aned), gskift, +kap));\n      } else {\n        ox1 = Math.max(0, Math.min(knækmængde, -0.5 * bop / aop, gskift, +kap));\n      }\n    }\n  }\n\n  var ox2;\n\n  if (gskift < Infinity) {\n    if (knækmængde === Infinity) {\n      ox2 = Math.max(0, Math.min(2 * a < +ag2 ? (bg2 - b) / (2 * a - ag2) : +kap, -b / (2 * a), +kap));\n      var oxsecond = (bg2 - b) / (2 * a - ag2);\n    }\n\n    if (knækmængde !== Infinity) {\n      if ((bg2 - bned) / (2 * aned - ag2) > knækmængde && (bg2 - bned) / (2 * aned - ag2) > gskift && (bg2 - bned) / (2 * aned - ag2) <= -0.5 * bned / aned) {\n        ox2 = Math.max(0, Math.min((bg2 - bned) / (2 * aned - ag2), -bned / (2 * aned), +kap));\n      } else {\n        if (ag2 * knækmængde + bg2 <= knækgromsop && ag2 * knækmængde + bg2 >= knækgromsned) {\n          ox2 = knækmængde;\n        } else {\n          if ((bg2 - bned) / (2 * aned - ag2) < knækmængde) {\n            ox2 = Math.max(0, Math.min((bg2 - bop) / (2 * aop - ag2), +kap));\n          } else {\n            ox2 = 0;\n          }\n        }\n      }\n    }\n\n    if (ordremængde !== Infinity) {\n      if ((bg2 - b) / (2 * a - ag2) <= ordreknæk1) {\n        ox2 = Math.max(0, Math.min((bg2 - b) / (2 * a - ag2), -b / (2 * a), +kap));\n      }\n\n      if ((bg2 - b) / (2 * a - ag2) > +ordreknæk1 && (+ordrepris - bg2) / ag2 <= +ordreknæk1 + +ordre) {\n        ox2 = (+ordrepris - bg2) / ag2;\n      }\n\n      if ((b - 2 * a * ordre - bg2) / (ag2 - 2 * a) > +ordreknæk1 + +ordre) {\n        ox2 = Math.max(0, Math.min((b - 2 * a * ordre - bg2) / (ag2 - 2 * a), -(b - 2 * a * ordre) / (2 * a), +kap));\n      }\n    }\n  } else {\n    ox2 = 0;\n  }\n\n  var tvo1, tr1, tvo2, tr2, op1, op2, op;\n  op2 = -Infinity;\n  tr2 = -Infinity;\n  tvo2 = Infinity;\n\n  if (gskift !== Infinity) {\n    if (ox1 <= gskift) {\n      tvo1 = (0.5 * ag * ox1 + bg) * ox1;\n    }\n\n    if (ox1 === gskift) {\n      tvo1 = (0.5 * ag * gskift + bg) * gskift;\n    }\n\n    if (ox2 < gskift) {\n      tvo2 = Infinity;\n    }\n\n    if (ox1 > gskift) {\n      tvo1 = Infinity;\n    }\n\n    if (ox2 > gskift) {\n      if (knækmængde === Infinity) {\n        op2 = a * ox2 + b;\n        tr2 = op2 * ox2;\n      }\n\n      tvo2 = gskift * (0.5 * ag * gskift + bg) + (ox2 - gskift) * (0.5 * ag2 * ox2 + 0.5 * ag2 * gskift + bg2);\n    }\n  } else {\n    tvo1 = (0.5 * ag * ox1 + bg) * ox1;\n  }\n\n  if (knækmængde !== Infinity) {\n    if (ox1 <= knækmængde) {\n      op1 = aop * ox1 + bop;\n      tr1 = op1 * ox1;\n    }\n\n    if (ox2 <= knækmængde) {\n      op2 = aop * ox2 + bop;\n      tr2 = op2 * ox2;\n    }\n\n    if (ox1 > knækmængde) {\n      op1 = aned * ox1 + bned;\n      tr1 = op1 * ox1;\n    }\n\n    if (ox2 > knækmængde) {\n      op2 = aned * ox2 + bned;\n      tr2 = op2 * ox2;\n    }\n  }\n\n  if (ordremængde !== Infinity && knækmængde === Infinity) {\n    if (ox1 <= ordreknæk1) {\n      op1 = a * ox1 + b;\n      tr1 = op1 * ox1;\n    }\n\n    if (ox1 > +ordreknæk1 && ox1 < +ordreknæk1 + +ordre) {\n      op1 = ordrepris;\n      tr1 = ordreknæk1 * (a * ordreknæk1 + b) + ordrepris * (ox1 - ordreknæk1);\n    }\n\n    if (ox1 >= +ordreknæk1 + +ordre) {\n      op1 = a * (ox1 - ordre) + b;\n      tr1 = op1 * (ox1 - ordre) + ordrepris * ordre;\n    } //########## Her skal skrives hvad ox2 op2 etc husk kun hvis knækmængde <\n    // if (ox2 <= knækmængde) {\n    //   op2 = aop * ox2 + bop;\n    //   tr2 = op2 * ox2;\n    // }\n    // if (ox2 > knækmængde) {\n    //   op2 = aned * ox2 + bned;\n    //   tr2 = op2 * ox2;\n    // }\n\n  }\n\n  if (ordremængde !== Infinity && gskift < Infinity) {\n    if (ox2 <= ordreknæk1) {\n      op2 = a * ox2 + b;\n      tr2 = op2 * ox2;\n    }\n\n    if (ox2 > +ordreknæk1 && ox2 < +ordreknæk1 + +ordre) {\n      op2 = ordrepris;\n      tr2 = ordreknæk1 * (a * ordreknæk1 + b) + ordrepris * (ox2 - ordreknæk1);\n    }\n\n    if (ox2 >= +ordreknæk1 + +ordre) {\n      op2 = a * (ox2 - ordre) + b;\n      tr2 = op2 * (ox2 - ordre) + ordrepris * ordre;\n    } //########## Her skal skrives hvad ox2 op2 etc husk kun hvis knækmængde <\n    // if (ox2 <= knækmængde) {\n    //   op2 = aop * ox2 + bop;\n    //   tr2 = op2 * ox2;\n    // }\n    // if (ox2 > knækmængde) {\n    //   op2 = aned * ox2 + bned;\n    //   tr2 = op2 * ox2;\n    // }\n\n  }\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    op1 = a * ox1 + b;\n    tr1 = op1 * ox1;\n  }\n\n  var dbfinal, tr, tvo, ox;\n  var db1 = tr1 - tvo1;\n  var db2;\n\n  if (knækmængde < Infinity || gskift < Infinity) {\n    db2 = tr2 - tvo2;\n  } else {\n    db2 = -Infinity;\n  }\n\n  if (db1 >= db2) {\n    ox = ox1;\n    op = op1;\n    dbfinal = db1;\n    tvo = tvo1;\n    tr = tr1;\n  } else {\n    ox = ox2;\n    op = op2;\n    dbfinal = db2;\n    tvo = tvo2;\n    tr = tr2;\n  }\n\n  var ove = tvo / ox; // ################################################################################################################################################################\n\n  var outside1;\n\n  if ((b - bg) / (ag - 2 * a) < 0 || (b - bg) / (ag - 2 * a) > gskift) {\n    outside1 = true;\n  } else {\n    outside1 = false;\n  }\n\n  var outside2;\n\n  if (oxsecond < gskift || oxsecond > 0.5 * -b / a) {\n    outside2 = true;\n  } else {\n    outside2 = false;\n  }\n\n  var gromkdata, gromknavn;\n\n  if (gskift < Infinity) {\n    gromkdata = [[0, bg], [+gskift, ag * +gskift + bg], [gskift, ag2 * gskift + bg2], [Math.max(-bned * 2 / +aned, -b * 2 / a), ag2 * Math.max(-bned * 2 / +aned, -b * 2 / a) + bg2]];\n    gromknavn = \"GROMK\\u2081\";\n  } else {\n    gromkdata = [[0, bg], [Math.max(-bned * 2 / +aned, -b * 2 / a), ag * Math.max(-bned * 2 / +aned, -b * 2 / a) + bg]];\n    gromknavn = 'GROMK';\n  }\n\n  var skær2;\n\n  if (ox1 > 0 && ox1 < Infinity && ox1 !== gskift && ox2 > 0 && ox2 < Infinity) {\n    skær2 = 1;\n  } else {\n    skær2 = 0;\n  } // var tvo;\n  // gskift === Infinity\n  //   ? (tvo = ove * ox)\n  //   : ox < gskift\n  //   ? (tvo = (ox * (ag * ox + bg + bg)) / 2)\n  //   : (tvo =\n  //       (gskift * (ag * gskift + bg + bg)) / 2 +\n  //       (ox - gskift) * ((ag2 * gskift + bg2 + ag2 * ox + bg2) / 2));\n\n\n  var optimalx = ox.toFixed(2);\n  var optimalp = op; //rettes op.toFixed(2)\n\n  var avcligning;\n\n  if (ag !== 0) {\n    avcligning = numberFormat4(0.5 * ag).concat('X + ', bg);\n  } else {\n    avcligning = bg;\n  }\n\n  var gromkligning;\n\n  if (ag !== 0) {\n    gromkligning = numberFormat4(ag).concat('X + ', bg);\n  } else {\n    gromkligning = bg;\n  }\n\n  var gromkligning2;\n\n  if (ag2 !== 0) {\n    gromkligning2 = numberFormat4(ag2).concat('X + ', bg2);\n  } else {\n    gromkligning2 = bg2;\n  }\n\n  var gromkligningkort;\n\n  if (ag !== 0) {\n    gromkligningkort = '';\n  } else {\n    gromkligningkort = ' = ' + bg;\n  }\n\n  var tvoligning2;\n\n  if (ag !== 0) {\n    tvoligning2 = '';\n  } else {\n    tvoligning2 = ' = ' + bg + 'X';\n  }\n\n  var knækgroms;\n\n  if (knækgromsned > 0) {\n    knækgroms = [[0, +bop], [knækmængde, knækgromsop], [knækmængde, knækgromsned], [-0.5 * bned / aned, 0]];\n  } else {\n    knækgroms = [[0, +bop], [knækmængde, knækgromsop], [knækmængde, knækgromsned]];\n  }\n\n  var optionshighcharts = {\n    title: {\n      text: \"P\\u1D52\\u1D56\\u1D57=\" + numberFormat1(op) + \" X\\u1D52\\u1D56\\u1D57=\" + numberFormat3(ox) + \" stk. DB\\u1D52\\u1D56\\u1D57=\" + numberFormat1(dbfinal)\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          menuItems: ['viewFullscreen', 'separator', // \"downloadPNG\",\n          'downloadPDF' // \"downloadSVG\",\n          ]\n        }\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    annotations: [{\n      labelOptions: {\n        // backgroundColor: \"rgba(255,255,255,1)\",\n        // backgroundColor: \"rgba(252, 255, 197, 1)\",\n        // verticalAlign: \"top\",\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        // align: \"left\",\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: Math.min(0.5 * +ox1, 0.5 * +gskift),\n          y: +ag * Math.min(0.5 * +ox1, 0.5 * +gskift) + bg\n        },\n        text: gromknavn + '=' + gromkligning,\n        borderWidth: 1,\n        borderColor: 'red',\n        backgroundColor: 'red',\n        style: {\n          color: 'white'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: Math.max((gskift + -bned / aned) / 2, (gskift + -b / a) / 2),\n          y: +ag2 * Math.max((gskift + -bned / aned) / 2, (gskift + -b / a) / 2) / 2 + bg2\n        },\n        text: \"GROMK\\u2082=\" + gromkligning2,\n        borderWidth: 1,\n        borderColor: 'red',\n        backgroundColor: 'red',\n        style: {\n          color: 'white'\n        }\n      }]\n    }, {\n      labelOptions: {\n        shape: 'connector',\n        align: 'right',\n        justify: false,\n        crop: true,\n        style: {\n          fontSize: '0.8em',\n          textOutline: '0px white'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: ox,\n          y: 0\n        },\n        text: \"X\\u1D52\\u1D56\\u1D57<br>\" + numberFormat3(ox) + ' stk.'\n      }]\n    }],\n    xAxis: {\n      title: {\n        text: 'Afsætning'\n      },\n      gridLineWidth: 1,\n      min: 0,\n      max: maxx,\n      labels: {\n        format: '{value} stk.'\n      }\n    },\n    yAxis: {\n      title: {\n        text: null\n      },\n      min: 0,\n      max: maxy,\n      labels: {\n        format: '{value} DKK.'\n      }\n    },\n    series: [{\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 3\n      },\n      name: 'Optimal P',\n      data: [[ox.toFixed(2), +op]] //ret op.toFixed(2)\n\n    }, {\n      type: 'line',\n      color: 'red',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMK',\n      data: gromkdata\n    }, {\n      type: 'line',\n      color: 'black',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      dashStyle: 'ShortDot',\n      name: 'Optimal P',\n      data: [[0, +op], [+ox.toFixed(2), +op] //ret op.toFixed(2)\n      ]\n    }, {\n      type: 'line',\n      color: 'black',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      dashStyle: 'ShortDot',\n      name: 'Optimal X',\n      data: [[+ox.toFixed(2), +op], //ret op.toFixed(2)\n      [+ox.toFixed(2), 0]]\n    }]\n  };\n\n  if (gskift === Infinity && knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'grey',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'VE',\n      data: [[0, bg], [-b / a, 0.5 * ag * (-b / a) + bg]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'black',\n      dashStyle: 'ShortDot',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS=GROMK',\n      data: [[0, ag * oxfirst + bg], [oxfirst, ag * oxfirst + bg]]\n    }); // optionshighcharts.series.push({\n    //   dataSorting: {\n    //     enabled: false,\n    //   },\n    //   name: \"DB\",\n    //   type: \"polygon\",\n    //   data: [\n    //     [0, ove],\n    //     [ox, ove],\n    //     [ox, op],\n    //     [0, op],\n    //   ],\n    //   color: \"rgb(0,255,0,.1)\",\n    // });\n    // optionshighcharts.series.push({\n    //   dataSorting: {\n    //     enabled: false,\n    //   },\n    //   name: \"TVO\",\n    //   type: \"polygon\",\n    //   data: [\n    //     [0, ove],\n    //     [ox, ove],\n    //     [ox, 0],\n    //     [0, 0],\n    //   ],\n    //   color: \"rgb(0,0,0,.10)\",\n    // });\n\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: -0.95 * b / a,\n          y: 0.5 * ag * (-0.95 * b / a) + bg\n        },\n        text: 'VE=' + avcligning,\n        borderWidth: 0,\n        borderColor: 'grey',\n        backgroundColor: 'grey',\n        style: {\n          color: 'white'\n        }\n      }]\n    });\n  } //Kapacitetlinje\n\n\n  optionshighcharts.series.push({\n    type: 'line',\n    dashStyle: 'Solid',\n    color: 'orange',\n    marker: {\n      enabled: false,\n      symbol: 'circle',\n      radius: 0\n    },\n    name: 'Kapacitet',\n    data: [[+kap, 0], [+kap, b]]\n  });\n  optionshighcharts.annotations.push({\n    labelOptions: {\n      padding: 2,\n      style: {\n        fontSize: '0.6em'\n      }\n    },\n    labels: [{\n      point: {\n        xAxis: 0,\n        yAxis: 0,\n        x: +kap,\n        y: b * 0.9\n      },\n      text: 'Kapacitet ' + +kap + ' Stk.',\n      borderWidth: 0,\n      // borderColor: \"red\",\n      backgroundColor: 'orange',\n      style: {\n        color: 'black'\n      }\n    }]\n  });\n\n  if (+reklame !== 0 && knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      id: 'series-22312',\n      type: 'line',\n      color: 'lightgrey',\n      dashStyle: 'ShortDot',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'Før afsætningsændring',\n      data: [[0, b], [-b / (a * (1 + reklame / 100)), 0]]\n    });\n    optionshighcharts.annotations.push({\n      id: 'anno-2',\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: -b / (2 * a * (1 + reklame / 100)),\n          y: a * (1 + reklame / 100) * -b / (2 * a * (1 + reklame / 100)) + b\n        },\n        text: 'Før<br /> ændring',\n        borderWidth: 0,\n        borderColor: 'lightgrey',\n        backgroundColor: 'lightgrey',\n        style: {\n          color: 'black'\n        }\n      }]\n    });\n  } //Kapacitetlinje\n\n\n  if (+knækmængde !== Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'P',\n      data: [[0, +bop], [knækmængde, knækpris], [-bned / aned, 0]]\n    });\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: knækmængde / 2,\n          y: aop * (knækmængde / 2) + bop\n        },\n        text: \"Pop = \" + aop + 'X + ' + bop,\n        borderWidth: 0,\n        borderColor: 'green',\n        backgroundColor: 'green',\n        style: {\n          color: 'white'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: (knækmængde + -bned / aned) / 2,\n          y: aned * ((knækmængde + -bned / aned) / 2) + bned\n        },\n        text: \"Pned = \" + aned + 'X + ' + bned,\n        borderWidth: 0,\n        borderColor: 'green',\n        backgroundColor: 'green',\n        style: {\n          color: 'white'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: knækmængde / 2,\n          y: 2 * aop * (knækmængde / 2) + bop\n        },\n        text: \"GROMSop = \" + 2 * aop + 'X + ' + bop,\n        borderWidth: 0,\n        borderColor: 'lightgreen',\n        backgroundColor: 'lightgreen',\n        style: {\n          color: 'black'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: (knækmængde + -0.5 * bned / aned) / 2,\n          y: 2 * aned * ((knækmængde + -0.5 * bned / aned) / 2) + bned\n        },\n        text: \"GROMSned = \" + 2 * aned + 'X + ' + bned,\n        borderWidth: 0,\n        borderColor: 'lightgreen',\n        backgroundColor: 'lightgreen',\n        style: {\n          color: 'black'\n        }\n      }]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS',\n      data: knækgroms\n    });\n  }\n\n  if (ordremængde === Infinity) {\n    optionshighcharts.annotations.push({\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: 0,\n          y: op\n        },\n        text: \"P\\u1D52\\u1D56\\u1D57<br>\" + numberFormat1(op),\n        shape: 'connector',\n        style: {\n          color: 'black',\n          fontSize: '0.8em'\n        }\n      }]\n    });\n  }\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS',\n      data: [[0, b], [-0.5 * b / a, 0]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'green',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'P',\n      data: [[0, b], [-b / a, 0]]\n    });\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: -0.5 * b / a,\n          y: 2\n        },\n        text: 'GROMS=' + numberFormat4(2 * a) + 'X+' + numberFormat4(b),\n        borderWidth: 0,\n        // borderColor: \"lightgreen\",\n        backgroundColor: 'lightgreen',\n        style: {\n          color: 'black'\n        },\n        borderRadius: 5\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: -0.95 * b / a,\n          y: 2\n        },\n        text: 'P=' + numberFormat4(a) + 'X+' + numberFormat4(b),\n        borderWidth: 1,\n        borderColor: 'green',\n        backgroundColor: 'green',\n        style: {\n          color: 'white'\n        }\n      }]\n    });\n  }\n\n  if (+ordremængde !== Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS før ordre',\n      data: [[0, +b], [+ordreknæk1, +ordrepris] // [+ordreknæk1 + +ordremængde, +ordrepris],\n      // [+ordremængde + -b / (2 * a), 0],\n      ]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'yellow',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS ordre',\n      data: [[+ordreknæk1, +ordrepris], [+ordreknæk1 + +ordremængde, +ordrepris]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'P før ordre',\n      data: [[0, b], [+ordreknæk1, a * +ordreknæk1 + b]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'P efter ordre',\n      data: [[+ordreknæk1 + +ordre, a * +ordreknæk1 + b], [-b / a + +ordre, 0]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'lightgreen',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS efter ordre',\n      data: [[+ordreknæk1 + +ordremængde, +ordrepris], [+ordremængde + -b / (2 * a), 0]]\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'ShortDot',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2\n      },\n      name: 'GROMS uden ordre',\n      data: [[0, b], [-b / (2 * a), 0]]\n    });\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em'\n        }\n      },\n      labels: [{\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: (+ordremængde + +ordreknæk1 + +ordreknæk1) / 2,\n          y: +ordrepris\n        },\n        text: 'Ordre på ' + +ordre + ' Stk. af ' + numberFormat1(+ordrepris),\n        borderWidth: 0,\n        // borderColor: \"red\",\n        backgroundColor: 'yellow',\n        style: {\n          color: 'black'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: +ordreknæk1 * 0.8,\n          y: 2 * a * (+ordreknæk1 * 0.8) + b\n        },\n        text: \"Groms\\u2071\\u207F\\u1D48\\u1D49\\u207F=\" + numberFormat2(2 * +a) + 'X + ' + numberFormat2(+b),\n        borderWidth: 0,\n        borderColor: 'lightgreen',\n        backgroundColor: 'lightgreen',\n        style: {\n          color: 'black'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: +ordreknæk1 * 0.8,\n          y: a * (+ordreknæk1 * 0.8) + b\n        },\n        text: \"P\\u2071\\u207F\\u1D48\\u1D49\\u207F=\" + numberFormat2(+a) + 'X + ' + numberFormat2(+b),\n        borderWidth: 0,\n        borderColor: 'green',\n        backgroundColor: 'green',\n        style: {\n          color: 'white'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: (+ordreknæk1 + +ordre) * 1.2,\n          y: 2 * a * (+ordreknæk1 + +ordre) * 1.2 + b + ordre * 2 * -a // y: 50,\n\n        },\n        text: \"Groms\\u1D49\\u1DA0\\u1D57\\u1D49\\u02B3=\" + numberFormat2(2 * +a) + 'X + ' + numberFormat2(b + ordre * 2 * -a),\n        borderWidth: 0,\n        borderColor: 'lightgreen',\n        backgroundColor: 'lightgreen',\n        style: {\n          color: 'black'\n        }\n      }, {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: (+ordreknæk1 + +ordre) * 1.2,\n          y: a * (+ordreknæk1 + +ordre) * 1.2 + b + ordre * -a // y: 50,\n\n        },\n        text: \"P\\u1D49\\u1DA0\\u1D57\\u1D49\\u02B3=\" + numberFormat2(+a) + 'X + ' + numberFormat2(b + ordre * -a),\n        borderWidth: 0,\n        borderColor: 'green',\n        backgroundColor: 'green',\n        style: {\n          color: 'white'\n        }\n      }]\n    });\n\n    if (ox > +ordreknæk1 && ox < +ordreknæk1 + +ordre) {\n      optionshighcharts.annotations.push({\n        labels: [{\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: a * ordreknæk1 + b\n          },\n          text: \"P\\u1D52\\u1D56\\u1D57 markedet<br>\" + numberFormat1(a * ordreknæk1 + b),\n          shape: 'connector',\n          style: {\n            color: 'black',\n            fontSize: '0.8em'\n          }\n        }]\n      });\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2\n        },\n        name: 'Optimal P markedet',\n        data: [[ordreknæk1, a * ordreknæk1 + b], [0, a * ordreknæk1 + b]]\n      });\n      optionshighcharts.annotations.push({\n        labels: [{\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: ordreknæk1,\n            y: 0\n          },\n          text: \"X\\u1D52\\u1D56\\u1D57 markedet<br>\" + numberFormat2(ordreknæk1) + ' stk.',\n          shape: 'connector',\n          style: {\n            color: 'black',\n            fontSize: '0.8em'\n          }\n        }]\n      });\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2\n        },\n        name: \"X\\u1D52\\u1D56\\u1D57 markedet\",\n        data: [[ordreknæk1, 0], [ordreknæk1, a * ordreknæk1 + b]]\n      });\n    }\n\n    if (ox > +ordreknæk1) {\n      optionshighcharts.annotations.push({\n        labels: [{\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: ordrepris\n          },\n          text: \"P\\u1D52\\u1D56\\u1D57 ordre<br>\" + numberFormat1(ordrepris),\n          shape: 'connector',\n          style: {\n            color: 'black',\n            fontSize: '0.8em'\n          }\n        }]\n      });\n    }\n\n    if (ox < +ordreknæk1) {\n      optionshighcharts.annotations.push({\n        labels: [{\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: a * ox + b\n          },\n          text: \"P\\u1D52\\u1D56\\u1D57 markedet<br>\" + numberFormat1(a * ox + b),\n          shape: 'connector',\n          style: {\n            color: 'black',\n            fontSize: '0.8em'\n          }\n        }]\n      });\n    }\n\n    if (ox >= +ordreknæk1 + +ordre) {\n      optionshighcharts.annotations.push({\n        labelOptions: {\n          padding: 2,\n          style: {\n            fontSize: '0.8em'\n          }\n        },\n        labels: [{\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: a * (ox - ordremængde) + b\n          },\n          text: \"P\\u1D52\\u1D56\\u1D57 markedet<br>\" + numberFormat1(a * (ox - ordremængde) + b),\n          shape: 'connector',\n          style: {\n            color: 'black',\n            fontSize: '0.8em'\n          }\n        }, {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: +ordrepris\n          },\n          text: \"P\\u1D52\\u1D56\\u1D57 ordre<br>\" + numberFormat1(+ordrepris),\n          align: 'right',\n          borderWidth: 0,\n          borderColor: '',\n          backgroundColor: '',\n          style: {\n            color: 'black'\n          }\n        }]\n      });\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2\n        },\n        name: 'P markedet',\n        data: [[0, ordrepris], [ordreknæk1, ordrepris]]\n      });\n    }\n  } // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // --- Chart Options Calculation ---\n  // IMPORTANT: The calculation of chartOptions should still happen here\n  // based on the state variables (a, b, ag, bg, etc.)\n  // This useEffect only handles the one-time MODULE initialization.\n  // Example structure of how chartOptions might be defined inside the component:\n\n\n  var chartOptions = {\n    /* ... your dynamic chart options ... */\n  }; // Calculation logic for a=0 needs to be inside the component body\n  // or a function called from it, so it updates on state changes.\n\n  if (Math.abs(a) < 1e-9 && !isOligopoly && !hasOrder) {\n    // Check for perfect competition\n    console.log(\"Adjusting chart options for Perfect Competition (a=0)\"); // Example: Modify series for horizontal lines\n    // This logic needs access to state variables like 'b', 'bg', 'ag'\n    // Ensure these calculations are performed correctly based on current state\n\n    var maxYValue = Math.max(300, b * 1.5, bg * 1.5);\n    var maxXValue = 200; // Or calculate based on equilibrium\n\n    if (Math.abs(ag) > 1e-9) {\n      var equilibriumX = (b - bg) / ag;\n\n      if (equilibriumX > 0 && isFinite(equilibriumX)) {\n        maxXValue = Math.max(200, equilibriumX * 2);\n      }\n    }\n\n    chartOptions = {\n      // ... Base options ...\n      xAxis: {\n        min: 0,\n        max: maxXValue,\n        title: {\n          text: 'Mængde'\n        }\n      },\n      yAxis: {\n        min: 0,\n        max: maxYValue,\n        title: {\n          text: 'DKK'\n        }\n      },\n      series: [{\n        name: 'P',\n        data: [[0, b], [maxXValue, b]],\n        // Horizontal P\n        color: 'green',\n        marker: {\n          enabled: false\n        }\n      }, {\n        name: 'GROMS',\n        data: [[0, b], [maxXValue, b]],\n        // Horizontal GROMS (same as P)\n        color: 'blue',\n        marker: {\n          enabled: false\n        }\n      }, {\n        name: 'GROMK',\n        data: [[0, bg], [maxXValue, ag * maxXValue + bg]],\n        // GROMK line\n        color: 'red',\n        marker: {\n          enabled: false\n        }\n      } // Add optimal point if calculated (ox for a=0)\n      // { name: 'Optimal', type: 'scatter', data: [[ox, b]], color: 'black' }\n      ] // ... Other options ...\n\n    };\n  } else {\n    // --- Logic for standard case (a < 0) or other scenarios --- \n    // Recalculate chartOptions for the non-perfect competition case\n    console.log(\"Calculating standard chart options\"); // Define your standard series for P, GROMS, GROMK based on a, b, ag, bg\n    // This part should resemble your previous working chart options for a != 0\n\n    var _maxYValue = Math.max(300, b * 1.5, bg * 1.5);\n\n    var _maxXValue = Math.max(100, -b / a * 1.5); // Example scaling\n\n\n    chartOptions = {\n      // ... Base options ...\n      xAxis: {\n        min: 0,\n        max: _maxXValue,\n        title: {\n          text: 'Mængde'\n        }\n      },\n      yAxis: {\n        min: 0,\n        max: _maxYValue,\n        title: {\n          text: 'DKK'\n        }\n      },\n      series: [{\n        name: 'P',\n        data: [[0, b], [-b / a, 0]].filter(function (p) {\n          return isFinite(p[0]) && isFinite(p[1]);\n        }),\n        color: 'green',\n        marker: {\n          enabled: false\n        }\n      }, {\n        name: 'GROMS',\n        data: [[0, b], [-0.5 * b / a, 0]].filter(function (p) {\n          return isFinite(p[0]) && isFinite(p[1]);\n        }),\n        color: 'blue',\n        marker: {\n          enabled: false\n        }\n      }, {\n        name: 'GROMK',\n        data: [[0, bg], [_maxXValue, ag * _maxXValue + bg]],\n        color: 'red',\n        marker: {\n          enabled: false\n        }\n      } // Add optimal point if calculated (standard ox, op)\n      // { name: 'Optimal', type: 'scatter', data: [[ox, op]], color: 'black' }\n      ] // ... Other options ...\n\n    };\n  } // --- Return JSX --- \n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/thomas/GIT/GEMINI_optimer/src/optimering2.js"],"names":["React","useState","useEffect","Toggle","Row","Col","FormControl","Button","Highcharts","HighchartsReact","numberFormat1","numberFormat2","numberFormat3","numberFormat4","numberFormat5","numberFormat6","Container","Form","InputGroup","exporting","annotations","highchartsMore","optimering2","console","log","window","PatternFill","toFixed","a","seta","aop","setaop","bop","setbop","aned","setaned","bned","setbned","Infinity","knækmængde","setknækmængde","ordre","setordre","ordrepris","setordrepris","ordremængde","setordremængde","b","setb","ag","setag","bg","setbg","gskift","setgskift","ag2","setag2","bg2","setbg2","kap","setkap","reklame","setreklame","knækpris","knækgromsop","knækgromsned","audenreklame","reklamenævner","reklamenævnerdecimal","maxx","maxy","Math","max","ordreknæk1","oxfirst","ox1","min","ox2","oxsecond","tvo1","tr1","tvo2","tr2","op1","op2","op","dbfinal","tr","tvo","ox","db1","db2","ove","outside1","outside2","gromkdata","gromknavn","skær2","optimalx","optimalp","avcligning","concat","gromkligning","gromkligning2","gromkligningkort","tvoligning2","knækgroms","optionshighcharts","title","text","buttons","contextButton","menuItems","credits","enabled","labelOptions","padding","style","fontSize","labels","point","xAxis","yAxis","x","y","borderWidth","borderColor","backgroundColor","color","shape","align","justify","crop","textOutline","gridLineWidth","format","series","marker","symbol","radius","name","data","type","dashStyle","push","id","borderRadius","chartOptions","abs","isOligopoly","hasOrder","maxYValue","maxXValue","equilibriumX","isFinite","filter","p"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,iBAA9C;AACA,OAAO,2BAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAO,cAAP;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,aANF,QAOO,OAPP;AAQA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAO,sCAAP,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B;AACApB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAL,IAAAA,SAAS,CAACX,UAAD,CAAT,CAFc,CAEc;;AAC5BY,IAAAA,WAAW,CAACZ,UAAD,CAAX,CAHc,CAGc;;AAC5Ba,IAAAA,cAAc,CAACb,UAAD,CAAd,CAJc,CAIc;AAE5B;AACA;AAEA;AACA;;AACA,QAAI,OAAOiB,MAAM,CAACC,WAAd,KAA8B,WAAlC,EAA+C;AAC3CH,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAD2C,CAE3C;AACH;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAED,GAlBQ,EAkBN,EAlBM,CAAT,CAF4B,CAoBpB;;AApBoB,kBAsBZvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAF,EAAK0B,OAAL,CAAa,CAAb,CAAF,CAtBI;AAAA;AAAA,MAsBvBC,CAtBuB;AAAA,MAsBpBC,IAtBoB;;AAAA,mBAuBR5B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAF,EAAO0B,OAAP,CAAe,CAAf,CAAF,CAvBA;AAAA;AAAA,MAuBvBG,GAvBuB;AAAA,MAuBlBC,MAvBkB;;AAAA,mBAwBR9B,QAAQ,CAAC,CAAE,GAAD,EAAM0B,OAAN,CAAc,CAAd,CAAF,CAxBA;AAAA;AAAA,MAwBvBK,GAxBuB;AAAA,MAwBlBC,MAxBkB;;AAAA,mBAyBNhC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAF,EAAK0B,OAAL,CAAa,CAAb,CAAF,CAzBF;AAAA;AAAA,MAyBvBO,IAzBuB;AAAA,MAyBjBC,OAzBiB;;AAAA,mBA0BNlC,QAAQ,CAAC,CAAE,GAAD,EAAM0B,OAAN,CAAc,CAAd,CAAF,CA1BF;AAAA;AAAA,MA0BvBS,IA1BuB;AAAA,MA0BjBC,OA1BiB;;AAAA,oBA2BMpC,QAAQ,CAAC,CAACqC,QAAF,CA3Bd;AAAA;AAAA,MA2BvBC,UA3BuB;AAAA,MA2BXC,aA3BW;;AAAA,oBA4BFvC,QAAQ,CAAC,CAAE,EAAD,EAAK0B,OAAL,CAAa,CAAb,CAAF,CA5BN;AAAA;AAAA,MA4BrBc,KA5BqB;AAAA,MA4BdC,QA5Bc;;AAAA,oBA6BMzC,QAAQ,CAAC,CAAE,EAAD,EAAK0B,OAAL,CAAa,CAAb,CAAF,CA7Bd;AAAA;AAAA,MA6BrBgB,SA7BqB;AAAA,MA6BVC,YA7BU;;AAAA,oBA8BQ3C,QAAQ,CAAC,CAACqC,QAAF,CA9BhB;AAAA;AAAA,MA8BvBO,WA9BuB;AAAA,MA8BVC,cA9BU;;AAAA,oBA+BV7C,QAAQ,CAAC,CAAE,GAAD,EAAM0B,OAAN,CAAc,CAAd,CAAF,CA/BE;AAAA;AAAA,MA+BrBoB,CA/BqB;AAAA,MA+BlBC,IA/BkB;;AAAA,oBAgCR/C,QAAQ,CAAC,CAAE,GAAD,CAAM0B,OAAN,CAAc,CAAd,CAAF,CAhCA;AAAA;AAAA,MAgCrBsB,EAhCqB;AAAA,MAgCjBC,KAhCiB;;AAAA,oBAiCRjD,QAAQ,CAAC,CAAE,EAAD,EAAK0B,OAAL,CAAa,CAAb,CAAF,CAjCA;AAAA;AAAA,MAiCrBwB,EAjCqB;AAAA,MAiCjBC,KAjCiB;;AAAA,oBAkCAnD,QAAQ,CAAC,CAACqC,QAAF,CAlCR;AAAA;AAAA,MAkCrBe,MAlCqB;AAAA,MAkCbC,SAlCa;;AAAA,oBAmCNrD,QAAQ,CAAC,CAAE,CAAD,EAAI0B,OAAJ,CAAY,CAAZ,CAAF,CAnCF;AAAA;AAAA,MAmCrB4B,GAnCqB;AAAA,MAmChBC,MAnCgB;;AAAA,oBAoCNvD,QAAQ,CAAC,CAAE,CAAD,EAAI0B,OAAJ,CAAY,CAAZ,CAAF,CApCF;AAAA;AAAA,MAoCrB8B,GApCqB;AAAA,MAoChBC,MApCgB;;AAAA,oBAqCNzD,QAAQ,CAAC,CAACqC,QAAF,CArCF;AAAA;AAAA,MAqCrBqB,GArCqB;AAAA,MAqChBC,MArCgB;;AAAA,oBAsCE3D,QAAQ,CAAC,CAAE,CAAD,EAAI0B,OAAJ,CAAY,CAAZ,CAAF,CAtCV;AAAA;AAAA,MAsCrBkC,OAtCqB;AAAA,MAsCZC,UAtCY;;AAwC5B,MAAIC,QAAQ,GAAGjC,GAAG,GAAGS,UAAN,GAAmBP,GAAlC;AAEA,MAAIgC,WAAW,GAAG,IAAIlC,GAAJ,GAAUS,UAAV,GAAuBP,GAAzC;AACA,MAAIiC,YAAY,GAAG,IAAI/B,IAAJ,GAAWK,UAAX,GAAwBH,IAA3C;;AAEA,MAAIyB,OAAO,KAAK,CAAhB,EAAmB;AACjB,QAAIK,YAAY,GAAGtC,CAAnB;AACAA,IAAAA,CAAC,GAAGA,CAAC,IAAI,IAAIiC,OAAO,GAAG,GAAlB,CAAL;AACA,QAAIM,aAAa,GAAG,CAAC,GAAD,GAAO,CAACN,OAA5B;AACA,QAAIO,oBAAoB,GAAG,CAAC,CAAC,GAAD,GAAO,CAACP,OAAT,IAAoB,GAA/C;AACD;;AACD,MAAIQ,IAAJ,EAAUC,IAAV;;AACA,MAAI/B,UAAU,KAAKD,QAAf,IAA2BO,WAAW,KAAKP,QAA/C,EAAyD;AACvD+B,IAAAA,IAAI,GAAG,CAACtB,CAAD,GAAKnB,CAAZ;AACA0C,IAAAA,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASzB,CAAT,EAAY,MAAME,EAAN,IAAY,CAACF,CAAD,GAAKnB,CAAjB,IAAsBuB,EAAtB,GAA2BV,KAAvC,CAAP;AACD,GAHD,MAGO;AACL,QAAII,WAAW,KAAKP,QAApB,EAA8B;AAC5B+B,MAAAA,IAAI,GAAI,CAAC,GAAD,GAAOtB,CAAR,GAAanB,CAAb,GAAiB,CAACa,KAAzB;AACA6B,MAAAA,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASzB,CAAT,EAAY,MAAME,EAAN,IAAY,CAACF,CAAD,GAAKnB,CAAjB,IAAsBuB,EAAlC,CAAP;AACD,KAHD,MAGO;AACLkB,MAAAA,IAAI,GAAG,CAACjC,IAAD,GAAQF,IAAf;AACAoC,MAAAA,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASxC,GAAT,EAAc,MAAMiB,EAAN,IAAY,CAACjB,GAAD,GAAOF,GAAnB,IAA0BqB,EAAxC,CAAP;AACD;AACF;;AACD,MAAIsB,UAAU,GAAG,CAAC,CAAC9B,SAAD,GAAaI,CAAd,KAAoB,IAAInB,CAAxB,CAAjB;AACA,MAAI8C,OAAJ,EAAaC,GAAb;;AACA,MAAIpC,UAAU,KAAKD,QAAf,IAA2BO,WAAW,KAAKP,QAA/C,EAAyD;AACvDoC,IAAAA,OAAO,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACrB,EAAE,GAAGJ,CAAN,KAAY,IAAInB,CAAJ,GAAQqB,EAApB,CAAZ,CAAV;AACA0B,IAAAA,GAAG,GAAGJ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAAS,IAAIhD,CAAJ,GAAQqB,EAAR,GAAa,CAACE,EAAE,GAAGJ,CAAN,KAAY,IAAInB,CAAJ,GAAQqB,EAApB,CAAb,GAAuCU,GAAhD,EAAqDN,MAArD,EAA8D,CAAC,GAAD,GAAON,CAAR,GAAanB,CAA1E,EAA6E,CAAC+B,GAA9E,CAAZ,CAAN;AACD;;AACD,MAAId,WAAW,KAAKP,QAApB,EAA8B;AAC5BoC,IAAAA,OAAO,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACrB,EAAE,GAAGJ,CAAN,KAAY,IAAInB,CAAJ,GAAQqB,EAApB,CAAZ,CAAV;AACA0B,IAAAA,GAAG,GAAGJ,IAAI,CAACC,GAAL,CACJ,CADI,EAEJD,IAAI,CAACK,GAAL,CACE,CAACzB,EAAE,GAAGJ,CAAN,KAAY,IAAInB,CAAJ,GAAQqB,EAApB,KAA2BwB,UAA3B,GAAwC,CAAC,CAACtB,EAAD,GAAMJ,CAAP,KAAa,IAAInB,CAAJ,GAAQqB,EAArB,CAAxC,GAAmE,CAACU,GADtE,EAGE,CAACR,EAAE,GAAGJ,CAAN,KAAY,IAAInB,CAAJ,GAAQqB,EAApB,IAA0BwB,UAA1B,IAAwC,CAAC1B,CAAC,GAAG,IAAInB,CAAJ,GAAQiB,WAAZ,GAA0BM,EAA3B,KAAkCF,EAAE,GAAG,IAAIrB,CAA3C,KAAiD6C,UAAU,GAAG,CAAChC,KAAvG,GACI,CAACE,SAAS,GAAGQ,EAAb,IAAmBF,EADvB,GAEI,CAACU,GALP,EAOE,CAACZ,CAAC,GAAG,IAAInB,CAAJ,GAAQiB,WAAZ,GAA0BM,EAA3B,KAAkCF,EAAE,GAAG,IAAIrB,CAA3C,IAAgD,CAAC6C,UAAD,GAAc,CAAChC,KAA/D,GACI,CAACM,CAAC,GAAG,IAAInB,CAAJ,GAAQ,CAACa,KAAb,GAAqBU,EAAtB,KAA6BF,EAAE,GAAG,IAAIrB,CAAtC,CADJ,GAEI,CAAC+B,GATP,EAUE,EAAEZ,CAAC,GAAG,IAAInB,CAAJ,GAAQa,KAAd,KAAwB,IAAIb,CAA5B,CAVF,EAWEyB,MAXF,EAaE,CAACM,GAbH,CAFI,CAAN;AAkBD;;AAED,MAAI,CAACpB,UAAD,KAAgBD,QAAhB,IAA4BO,WAAW,KAAKP,QAAhD,EAA0D;AACxD,QAAIW,EAAE,GAAG,CAACV,UAAN,GAAmBY,EAAnB,GAAwB,CAACa,WAA7B,EAA0C;AACxCU,MAAAA,OAAO,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACrB,EAAE,GAAG,CAACnB,GAAP,KAAe,IAAI,CAACF,GAAL,GAAWmB,EAA1B,CAAZ,CAAV;AACA0B,MAAAA,GAAG,GAAGJ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAAS,CAACzB,EAAE,GAAG,CAACnB,GAAP,KAAe,IAAI,CAACF,GAAL,GAAWmB,EAA1B,CAAT,EAAyC,CAAC,GAAD,GAAOjB,GAAR,GAAeF,GAAvD,EAA4D,CAACuB,MAA7D,EAAqE,CAACM,GAAtE,CAAZ,CAAN;AACD,KAHD,MAGO;AACL,UAAIV,EAAE,GAAGV,UAAL,GAAkBY,EAAlB,GAAuBc,YAAvB,IAAuCpB,WAAW,KAAKP,QAA3D,EAAqE;AACnEoC,QAAAA,OAAO,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAACrB,EAAE,GAAGf,IAAN,KAAe,IAAIF,IAAJ,GAAWe,EAA1B,CAAZ,CAAV;AACA0B,QAAAA,GAAG,GAAGJ,IAAI,CAACC,GAAL,CACJ,CADI,EAEJD,IAAI,CAACK,GAAL,CACE,IAAI1C,IAAJ,GAAW,CAACe,EAAZ,GAAiB,CAACE,EAAE,GAAG,CAACf,IAAP,KAAgB,IAAIF,IAAJ,GAAWe,EAA3B,CAAjB,GAAkD,CAACU,GADrD,EAEEY,IAAI,CAACC,GAAL,CAASjC,UAAT,EAAsB,CAAC,GAAD,GAAOH,IAAR,GAAgBF,IAArC,CAFF,EAGEmB,MAHF,EAIE,CAACM,GAJH,CAFI,CAAN;AASD,OAXD,MAWO;AACLgB,QAAAA,GAAG,GAAGJ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAASrC,UAAT,EAAsB,CAAC,GAAD,GAAOP,GAAR,GAAeF,GAApC,EAAyCuB,MAAzC,EAAiD,CAACM,GAAlD,CAAZ,CAAN;AACD;AACF;AACF;;AAED,MAAIkB,GAAJ;;AACA,MAAIxB,MAAM,GAAGf,QAAb,EAAuB;AACrB,QAAIC,UAAU,KAAKD,QAAnB,EAA6B;AAC3BuC,MAAAA,GAAG,GAAGN,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAAS,IAAIhD,CAAJ,GAAQ,CAAC2B,GAAT,GAAe,CAACE,GAAG,GAAGV,CAAP,KAAa,IAAInB,CAAJ,GAAQ2B,GAArB,CAAf,GAA2C,CAACI,GAArD,EAA0D,CAACZ,CAAD,IAAM,IAAInB,CAAV,CAA1D,EAAwE,CAAC+B,GAAzE,CAAZ,CAAN;AACA,UAAImB,QAAQ,GAAG,CAACrB,GAAG,GAAGV,CAAP,KAAa,IAAInB,CAAJ,GAAQ2B,GAArB,CAAf;AACD;;AACD,QAAIhB,UAAU,KAAKD,QAAnB,EAA6B;AAC3B,UACE,CAACmB,GAAG,GAAGrB,IAAP,KAAgB,IAAIF,IAAJ,GAAWqB,GAA3B,IAAkChB,UAAlC,IACA,CAACkB,GAAG,GAAGrB,IAAP,KAAgB,IAAIF,IAAJ,GAAWqB,GAA3B,IAAkCF,MADlC,IAEA,CAACI,GAAG,GAAGrB,IAAP,KAAgB,IAAIF,IAAJ,GAAWqB,GAA3B,KAAoC,CAAC,GAAD,GAAOnB,IAAR,GAAgBF,IAHrD,EAIE;AACA2C,QAAAA,GAAG,GAAGN,IAAI,CAACC,GAAL,CACJ,CADI,EAEJD,IAAI,CAACK,GAAL,CACE,CAACnB,GAAG,GAAGrB,IAAP,KAAgB,IAAIF,IAAJ,GAAWqB,GAA3B,CADF,EAEE,CAACnB,IAAD,IAAS,IAAIF,IAAb,CAFF,EAIE,CAACyB,GAJH,CAFI,CAAN;AASD,OAdD,MAcO;AACL,YAAIJ,GAAG,GAAGhB,UAAN,GAAmBkB,GAAnB,IAA0BO,WAA1B,IAAyCT,GAAG,GAAGhB,UAAN,GAAmBkB,GAAnB,IAA0BQ,YAAvE,EAAqF;AACnFY,UAAAA,GAAG,GAAGtC,UAAN;AACD,SAFD,MAEO;AACL,cAAI,CAACkB,GAAG,GAAGrB,IAAP,KAAgB,IAAIF,IAAJ,GAAWqB,GAA3B,IAAkChB,UAAtC,EAAkD;AAChDsC,YAAAA,GAAG,GAAGN,IAAI,CAACC,GAAL,CACJ,CADI,EAEJD,IAAI,CAACK,GAAL,CACE,CAACnB,GAAG,GAAGzB,GAAP,KAAe,IAAIF,GAAJ,GAAUyB,GAAzB,CADF,EAGE,CAACI,GAHH,CAFI,CAAN;AAQD,WATD,MASO;AACLkB,YAAAA,GAAG,GAAG,CAAN;AACD;AACF;AACF;AACF;;AAED,QAAIhC,WAAW,KAAKP,QAApB,EAA8B;AAC5B,UAAI,CAACmB,GAAG,GAAGV,CAAP,KAAa,IAAInB,CAAJ,GAAQ2B,GAArB,KAA6BkB,UAAjC,EAA6C;AAC3CI,QAAAA,GAAG,GAAGN,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAAS,CAACnB,GAAG,GAAGV,CAAP,KAAa,IAAInB,CAAJ,GAAQ2B,GAArB,CAAT,EAAoC,CAACR,CAAD,IAAM,IAAInB,CAAV,CAApC,EAAkD,CAAC+B,GAAnD,CAAZ,CAAN;AACD;;AACD,UAAI,CAACF,GAAG,GAAGV,CAAP,KAAa,IAAInB,CAAJ,GAAQ2B,GAArB,IAA4B,CAACkB,UAA7B,IAA2C,CAAC,CAAC9B,SAAD,GAAac,GAAd,IAAqBF,GAArB,IAA4B,CAACkB,UAAD,GAAc,CAAChC,KAA1F,EAAiG;AAC/FoC,QAAAA,GAAG,GAAG,CAAC,CAAClC,SAAD,GAAac,GAAd,IAAqBF,GAA3B;AACD;;AACD,UAAI,CAACR,CAAC,GAAG,IAAInB,CAAJ,GAAQa,KAAZ,GAAoBgB,GAArB,KAA6BF,GAAG,GAAG,IAAI3B,CAAvC,IAA4C,CAAC6C,UAAD,GAAc,CAAChC,KAA/D,EAAsE;AACpEoC,QAAAA,GAAG,GAAGN,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACK,GAAL,CAAS,CAAC7B,CAAC,GAAG,IAAInB,CAAJ,GAAQa,KAAZ,GAAoBgB,GAArB,KAA6BF,GAAG,GAAG,IAAI3B,CAAvC,CAAT,EAAoD,EAAEmB,CAAC,GAAG,IAAInB,CAAJ,GAAQa,KAAd,KAAwB,IAAIb,CAA5B,CAApD,EAAoF,CAAC+B,GAArF,CAAZ,CAAN;AACD;AACF;AACF,GAnDD,MAmDO;AACLkB,IAAAA,GAAG,GAAG,CAAN;AACD;;AACD,MAAIE,IAAJ,EAAUC,GAAV,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,EAApC;AACAD,EAAAA,GAAG,GAAG,CAAC9C,QAAP;AACA4C,EAAAA,GAAG,GAAG,CAAC5C,QAAP;AACA2C,EAAAA,IAAI,GAAG3C,QAAP;;AACA,MAAIe,MAAM,KAAKf,QAAf,EAAyB;AACvB,QAAIqC,GAAG,IAAItB,MAAX,EAAmB;AACjB0B,MAAAA,IAAI,GAAG,CAAC,MAAM9B,EAAN,GAAW0B,GAAX,GAAiBxB,EAAlB,IAAwBwB,GAA/B;AACD;;AACD,QAAIA,GAAG,KAAKtB,MAAZ,EAAoB;AAClB0B,MAAAA,IAAI,GAAG,CAAC,MAAM9B,EAAN,GAAWI,MAAX,GAAoBF,EAArB,IAA2BE,MAAlC;AACD;;AACD,QAAIwB,GAAG,GAAGxB,MAAV,EAAkB;AAChB4B,MAAAA,IAAI,GAAG3C,QAAP;AACD;;AAED,QAAIqC,GAAG,GAAGtB,MAAV,EAAkB;AAChB0B,MAAAA,IAAI,GAAGzC,QAAP;AACD;;AACD,QAAIuC,GAAG,GAAGxB,MAAV,EAAkB;AAChB,UAAId,UAAU,KAAKD,QAAnB,EAA6B;AAC3B8C,QAAAA,GAAG,GAAGxD,CAAC,GAAGiD,GAAJ,GAAU9B,CAAhB;AACAmC,QAAAA,GAAG,GAAGE,GAAG,GAAGP,GAAZ;AACD;;AACDI,MAAAA,IAAI,GAAG5B,MAAM,IAAI,MAAMJ,EAAN,GAAWI,MAAX,GAAoBF,EAAxB,CAAN,GAAoC,CAAC0B,GAAG,GAAGxB,MAAP,KAAkB,MAAME,GAAN,GAAYsB,GAAZ,GAAkB,MAAMtB,GAAN,GAAYF,MAA9B,GAAuCI,GAAzD,CAA3C;AACD;AACF,GArBD,MAqBO;AACLsB,IAAAA,IAAI,GAAG,CAAC,MAAM9B,EAAN,GAAW0B,GAAX,GAAiBxB,EAAlB,IAAwBwB,GAA/B;AACD;;AAED,MAAIpC,UAAU,KAAKD,QAAnB,EAA6B;AAC3B,QAAIqC,GAAG,IAAIpC,UAAX,EAAuB;AACrB4C,MAAAA,GAAG,GAAGrD,GAAG,GAAG6C,GAAN,GAAY3C,GAAlB;AACAgD,MAAAA,GAAG,GAAGG,GAAG,GAAGR,GAAZ;AACD;;AACD,QAAIE,GAAG,IAAItC,UAAX,EAAuB;AACrB6C,MAAAA,GAAG,GAAGtD,GAAG,GAAG+C,GAAN,GAAY7C,GAAlB;AACAkD,MAAAA,GAAG,GAAGE,GAAG,GAAGP,GAAZ;AACD;;AACD,QAAIF,GAAG,GAAGpC,UAAV,EAAsB;AACpB4C,MAAAA,GAAG,GAAGjD,IAAI,GAAGyC,GAAP,GAAavC,IAAnB;AACA4C,MAAAA,GAAG,GAAGG,GAAG,GAAGR,GAAZ;AACD;;AACD,QAAIE,GAAG,GAAGtC,UAAV,EAAsB;AACpB6C,MAAAA,GAAG,GAAGlD,IAAI,GAAG2C,GAAP,GAAazC,IAAnB;AACA8C,MAAAA,GAAG,GAAGE,GAAG,GAAGP,GAAZ;AACD;AACF;;AACD,MAAIhC,WAAW,KAAKP,QAAhB,IAA4BC,UAAU,KAAKD,QAA/C,EAAyD;AACvD,QAAIqC,GAAG,IAAIF,UAAX,EAAuB;AACrBU,MAAAA,GAAG,GAAGvD,CAAC,GAAG+C,GAAJ,GAAU5B,CAAhB;AACAiC,MAAAA,GAAG,GAAGG,GAAG,GAAGR,GAAZ;AACD;;AACD,QAAIA,GAAG,GAAG,CAACF,UAAP,IAAqBE,GAAG,GAAG,CAACF,UAAD,GAAc,CAAChC,KAA9C,EAAqD;AACnD0C,MAAAA,GAAG,GAAGxC,SAAN;AACAqC,MAAAA,GAAG,GAAGP,UAAU,IAAI7C,CAAC,GAAG6C,UAAJ,GAAiB1B,CAArB,CAAV,GAAoCJ,SAAS,IAAIgC,GAAG,GAAGF,UAAV,CAAnD;AACD;;AACD,QAAIE,GAAG,IAAI,CAACF,UAAD,GAAc,CAAChC,KAA1B,EAAiC;AAC/B0C,MAAAA,GAAG,GAAGvD,CAAC,IAAI+C,GAAG,GAAGlC,KAAV,CAAD,GAAoBM,CAA1B;AACAiC,MAAAA,GAAG,GAAGG,GAAG,IAAIR,GAAG,GAAGlC,KAAV,CAAH,GAAsBE,SAAS,GAAGF,KAAxC;AACD,KAZsD,CAcvD;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACD;;AAED,MAAII,WAAW,KAAKP,QAAhB,IAA4Be,MAAM,GAAGf,QAAzC,EAAmD;AACjD,QAAIuC,GAAG,IAAIJ,UAAX,EAAuB;AACrBW,MAAAA,GAAG,GAAGxD,CAAC,GAAGiD,GAAJ,GAAU9B,CAAhB;AACAmC,MAAAA,GAAG,GAAGE,GAAG,GAAGP,GAAZ;AACD;;AACD,QAAIA,GAAG,GAAG,CAACJ,UAAP,IAAqBI,GAAG,GAAG,CAACJ,UAAD,GAAc,CAAChC,KAA9C,EAAqD;AACnD2C,MAAAA,GAAG,GAAGzC,SAAN;AACAuC,MAAAA,GAAG,GAAGT,UAAU,IAAI7C,CAAC,GAAG6C,UAAJ,GAAiB1B,CAArB,CAAV,GAAoCJ,SAAS,IAAIkC,GAAG,GAAGJ,UAAV,CAAnD;AACD;;AACD,QAAII,GAAG,IAAI,CAACJ,UAAD,GAAc,CAAChC,KAA1B,EAAiC;AAC/B2C,MAAAA,GAAG,GAAGxD,CAAC,IAAIiD,GAAG,GAAGpC,KAAV,CAAD,GAAoBM,CAA1B;AACAmC,MAAAA,GAAG,GAAGE,GAAG,IAAIP,GAAG,GAAGpC,KAAV,CAAH,GAAsBE,SAAS,GAAGF,KAAxC;AACD,KAZgD,CAcjD;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACD;;AAED,MAAIF,UAAU,KAAKD,QAAf,IAA2BO,WAAW,KAAKP,QAA/C,EAAyD;AACvD6C,IAAAA,GAAG,GAAGvD,CAAC,GAAG+C,GAAJ,GAAU5B,CAAhB;AAEAiC,IAAAA,GAAG,GAAGG,GAAG,GAAGR,GAAZ;AACD;;AACD,MAAIW,OAAJ,EAAaC,EAAb,EAAiBC,GAAjB,EAAsBC,EAAtB;AACA,MAAIC,GAAG,GAAGV,GAAG,GAAGD,IAAhB;AACA,MAAIY,GAAJ;;AACA,MAAIpD,UAAU,GAAGD,QAAb,IAAyBe,MAAM,GAAGf,QAAtC,EAAgD;AAC9CqD,IAAAA,GAAG,GAAGT,GAAG,GAAGD,IAAZ;AACD,GAFD,MAEO;AACLU,IAAAA,GAAG,GAAG,CAACrD,QAAP;AACD;;AACD,MAAIoD,GAAG,IAAIC,GAAX,EAAgB;AACdF,IAAAA,EAAE,GAAGd,GAAL;AACAU,IAAAA,EAAE,GAAGF,GAAL;AACAG,IAAAA,OAAO,GAAGI,GAAV;AACAF,IAAAA,GAAG,GAAGT,IAAN;AACAQ,IAAAA,EAAE,GAAGP,GAAL;AACD,GAND,MAMO;AACLS,IAAAA,EAAE,GAAGZ,GAAL;AACAQ,IAAAA,EAAE,GAAGD,GAAL;AACAE,IAAAA,OAAO,GAAGK,GAAV;AACAH,IAAAA,GAAG,GAAGP,IAAN;AACAM,IAAAA,EAAE,GAAGL,GAAL;AACD;;AACD,MAAIU,GAAG,GAAGJ,GAAG,GAAGC,EAAhB,CAxS4B,CA0S5B;;AAEA,MAAII,QAAJ;;AACA,MAAI,CAAC9C,CAAC,GAAGI,EAAL,KAAYF,EAAE,GAAG,IAAIrB,CAArB,IAA0B,CAA1B,IAA+B,CAACmB,CAAC,GAAGI,EAAL,KAAYF,EAAE,GAAG,IAAIrB,CAArB,IAA0ByB,MAA7D,EAAqE;AACnEwC,IAAAA,QAAQ,GAAG,IAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAIC,QAAJ;;AACA,MAAIhB,QAAQ,GAAGzB,MAAX,IAAqByB,QAAQ,GAAI,MAAM,CAAC/B,CAAR,GAAanB,CAAjD,EAAoD;AAClDkE,IAAAA,QAAQ,GAAG,IAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAIC,SAAJ,EAAeC,SAAf;;AACA,MAAI3C,MAAM,GAAGf,QAAb,EAAuB;AACrByD,IAAAA,SAAS,GAAG,CACV,CAAC,CAAD,EAAI5C,EAAJ,CADU,EAEV,CAAC,CAACE,MAAF,EAAUJ,EAAE,GAAG,CAACI,MAAN,GAAeF,EAAzB,CAFU,EAGV,CAACE,MAAD,EAASE,GAAG,GAAGF,MAAN,GAAeI,GAAxB,CAHU,EAIV,CAACc,IAAI,CAACC,GAAL,CAAU,CAACpC,IAAD,GAAQ,CAAT,GAAc,CAACF,IAAxB,EAA+B,CAACa,CAAD,GAAK,CAAN,GAAWnB,CAAzC,CAAD,EAA8C2B,GAAG,GAAGgB,IAAI,CAACC,GAAL,CAAU,CAACpC,IAAD,GAAQ,CAAT,GAAc,CAACF,IAAxB,EAA+B,CAACa,CAAD,GAAK,CAAN,GAAWnB,CAAzC,CAAN,GAAoD6B,GAAlG,CAJU,CAAZ;AAMAuC,IAAAA,SAAS,GAAG,aAAZ;AACD,GARD,MAQO;AACLD,IAAAA,SAAS,GAAG,CACV,CAAC,CAAD,EAAI5C,EAAJ,CADU,EAEV,CAACoB,IAAI,CAACC,GAAL,CAAU,CAACpC,IAAD,GAAQ,CAAT,GAAc,CAACF,IAAxB,EAA+B,CAACa,CAAD,GAAK,CAAN,GAAWnB,CAAzC,CAAD,EAA8CqB,EAAE,GAAGsB,IAAI,CAACC,GAAL,CAAU,CAACpC,IAAD,GAAQ,CAAT,GAAc,CAACF,IAAxB,EAA+B,CAACa,CAAD,GAAK,CAAN,GAAWnB,CAAzC,CAAL,GAAmDuB,EAAjG,CAFU,CAAZ;AAIA6C,IAAAA,SAAS,GAAG,OAAZ;AACD;;AAED,MAAIC,KAAJ;;AACA,MAAItB,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAGrC,QAAjB,IAA6BqC,GAAG,KAAKtB,MAArC,IAA+CwB,GAAG,GAAG,CAArD,IAA0DA,GAAG,GAAGvC,QAApE,EAA8E;AAC5E2D,IAAAA,KAAK,GAAG,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAAR;AACD,GAhV2B,CAiV5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIC,QAAQ,GAAGT,EAAE,CAAC9D,OAAH,CAAW,CAAX,CAAf;AACA,MAAIwE,QAAQ,GAAGd,EAAf,CA3V4B,CA2VT;;AAEnB,MAAIe,UAAJ;;AACA,MAAInD,EAAE,KAAK,CAAX,EAAc;AACZmD,IAAAA,UAAU,GAAGvF,aAAa,CAAC,MAAMoC,EAAP,CAAb,CAAwBoD,MAAxB,CAA+B,MAA/B,EAAuClD,EAAvC,CAAb;AACD,GAFD,MAEO;AACLiD,IAAAA,UAAU,GAAGjD,EAAb;AACD;;AAED,MAAImD,YAAJ;;AACA,MAAIrD,EAAE,KAAK,CAAX,EAAc;AACZqD,IAAAA,YAAY,GAAGzF,aAAa,CAACoC,EAAD,CAAb,CAAkBoD,MAAlB,CAAyB,MAAzB,EAAiClD,EAAjC,CAAf;AACD,GAFD,MAEO;AACLmD,IAAAA,YAAY,GAAGnD,EAAf;AACD;;AAED,MAAIoD,aAAJ;;AACA,MAAIhD,GAAG,KAAK,CAAZ,EAAe;AACbgD,IAAAA,aAAa,GAAG1F,aAAa,CAAC0C,GAAD,CAAb,CAAmB8C,MAAnB,CAA0B,MAA1B,EAAkC5C,GAAlC,CAAhB;AACD,GAFD,MAEO;AACL8C,IAAAA,aAAa,GAAG9C,GAAhB;AACD;;AAED,MAAI+C,gBAAJ;;AACA,MAAIvD,EAAE,KAAK,CAAX,EAAc;AACZuD,IAAAA,gBAAgB,GAAG,EAAnB;AACD,GAFD,MAEO;AACLA,IAAAA,gBAAgB,GAAG,QAAQrD,EAA3B;AACD;;AAED,MAAIsD,WAAJ;;AACA,MAAIxD,EAAE,KAAK,CAAX,EAAc;AACZwD,IAAAA,WAAW,GAAG,EAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,GAAG,QAAQtD,EAAR,GAAa,GAA3B;AACD;;AAED,MAAIuD,SAAJ;;AACA,MAAIzC,YAAY,GAAG,CAAnB,EAAsB;AACpByC,IAAAA,SAAS,GAAG,CACV,CAAC,CAAD,EAAI,CAAC1E,GAAL,CADU,EAEV,CAACO,UAAD,EAAayB,WAAb,CAFU,EAGV,CAACzB,UAAD,EAAa0B,YAAb,CAHU,EAIV,CAAE,CAAC,GAAD,GAAO7B,IAAR,GAAgBF,IAAjB,EAAuB,CAAvB,CAJU,CAAZ;AAMD,GAPD,MAOO;AACLwE,IAAAA,SAAS,GAAG,CACV,CAAC,CAAD,EAAI,CAAC1E,GAAL,CADU,EAEV,CAACO,UAAD,EAAayB,WAAb,CAFU,EAGV,CAACzB,UAAD,EAAa0B,YAAb,CAHU,CAAZ;AAKD;;AAED,MAAI0C,iBAAiB,GAAG;AACtBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EACF,yBACAnG,aAAa,CAAC2E,EAAD,CADb,GAEA,uBAFA,GAGAzE,aAAa,CAAC6E,EAAD,CAHb,GAIA,6BAJA,GAKA/E,aAAa,CAAC4E,OAAD;AAPV,KADe;AAUtBnE,IAAAA,SAAS,EAAE;AACT2F,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE;AACbC,UAAAA,SAAS,EAAE,CACT,gBADS,EAET,WAFS,EAGT;AACA,uBAJS,CAKT;AALS;AADE;AADR;AADA,KAVW;AAuBtBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF,KAvBa;AA0BtB9F,IAAAA,WAAW,EAAE,CACX;AACE+F,MAAAA,YAAY,EAAE;AACZ;AACA;AACA;AACAC,QAAAA,OAAO,EAAE,CAJG;AAMZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AANK,OADhB;AAWEC,MAAAA,MAAM,EAAE,CACN;AACE;AACAC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAEpD,IAAI,CAACK,GAAL,CAAS,MAAM,CAACD,GAAhB,EAAqB,MAAM,CAACtB,MAA5B,CAHE;AAILuE,UAAAA,CAAC,EAAE,CAAC3E,EAAD,GAAMsB,IAAI,CAACK,GAAL,CAAS,MAAM,CAACD,GAAhB,EAAqB,MAAM,CAACtB,MAA5B,CAAN,GAA4CF;AAJ1C,SAFT;AAQE0D,QAAAA,IAAI,EAAEb,SAAS,GAAG,GAAZ,GAAkBM,YAR1B;AASEuB,QAAAA,WAAW,EAAE,CATf;AAUEC,QAAAA,WAAW,EAAE,KAVf;AAWEC,QAAAA,eAAe,EAAE,KAXnB;AAYEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAZT,OADM,EAeN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAEpD,IAAI,CAACC,GAAL,CAAS,CAACnB,MAAM,GAAG,CAACjB,IAAD,GAAQF,IAAlB,IAA0B,CAAnC,EAAsC,CAACmB,MAAM,GAAG,CAACN,CAAD,GAAKnB,CAAf,IAAoB,CAA1D,CAHE;AAILgG,UAAAA,CAAC,EAAG,CAACrE,GAAD,GAAOgB,IAAI,CAACC,GAAL,CAAS,CAACnB,MAAM,GAAG,CAACjB,IAAD,GAAQF,IAAlB,IAA0B,CAAnC,EAAsC,CAACmB,MAAM,GAAG,CAACN,CAAD,GAAKnB,CAAf,IAAoB,CAA1D,CAAR,GAAwE,CAAxE,GAA4E6B;AAJ1E,SADT;AAOEoD,QAAAA,IAAI,EAAE,iBAAiBN,aAPzB;AAQEsB,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,KATf;AAUEC,QAAAA,eAAe,EAAE,KAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OAfM;AAXV,KADW,EA0CX;AACEb,MAAAA,YAAY,EAAE;AACZc,QAAAA,KAAK,EAAE,WADK;AAEZC,QAAAA,KAAK,EAAE,OAFK;AAGZC,QAAAA,OAAO,EAAE,KAHG;AAIZC,QAAAA,IAAI,EAAE,IAJM;AAKZf,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,OADL;AAELe,UAAAA,WAAW,EAAE;AAFR;AALK,OADhB;AAWEd,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAElC,EAHE;AAILmC,UAAAA,CAAC,EAAE;AAJE,SADT;AAOEf,QAAAA,IAAI,EAAE,4BAA4BjG,aAAa,CAAC6E,EAAD,CAAzC,GAAgD;AAPxD,OADM;AAXV,KA1CW,CA1BS;AA4FtBgC,IAAAA,KAAK,EAAE;AACLb,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADF;AAILyB,MAAAA,aAAa,EAAE,CAJV;AAKL1D,MAAAA,GAAG,EAAE,CALA;AAMLJ,MAAAA,GAAG,EAAEH,IANA;AAOLkD,MAAAA,MAAM,EAAE;AACNgB,QAAAA,MAAM,EAAE;AADF;AAPH,KA5Fe;AAuGtBb,IAAAA,KAAK,EAAE;AACLd,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADF;AAILjC,MAAAA,GAAG,EAAE,CAJA;AAKLJ,MAAAA,GAAG,EAAEF,IALA;AAMLiD,MAAAA,MAAM,EAAE;AACNgB,QAAAA,MAAM,EAAE;AADF;AANH,KAvGe;AAiHtBC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OADV;AAMEC,MAAAA,IAAI,EAAE,WANR;AAOEC,MAAAA,IAAI,EAAE,CAAC,CAACpD,EAAE,CAAC9D,OAAH,CAAW,CAAX,CAAD,EAAgB,CAAC0D,EAAjB,CAAD,CAPR,CAOgC;;AAPhC,KADM,EAWN;AACEyD,MAAAA,IAAI,EAAE,MADR;AAEEd,MAAAA,KAAK,EAAE,KAFT;AAIES,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJV;AASEC,MAAAA,IAAI,EAAE,OATR;AAUEC,MAAAA,IAAI,EAAE9C;AAVR,KAXM,EAwBN;AACE+C,MAAAA,IAAI,EAAE,MADR;AAEEd,MAAAA,KAAK,EAAE,OAFT;AAGES,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAHV;AAQEI,MAAAA,SAAS,EAAE,UARb;AASEH,MAAAA,IAAI,EAAE,WATR;AAUEC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI,CAACxD,EAAL,CADI,EAEJ,CAAC,CAACI,EAAE,CAAC9D,OAAH,CAAW,CAAX,CAAF,EAAiB,CAAC0D,EAAlB,CAFI,CAEmB;AAFnB;AAVR,KAxBM,EAuCN;AACEyD,MAAAA,IAAI,EAAE,MADR;AAEEd,MAAAA,KAAK,EAAE,OAFT;AAGES,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAHV;AAQEI,MAAAA,SAAS,EAAE,UARb;AASEH,MAAAA,IAAI,EAAE,WATR;AAUEC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAACpD,EAAE,CAAC9D,OAAH,CAAW,CAAX,CAAF,EAAiB,CAAC0D,EAAlB,CADI,EACmB;AACvB,OAAC,CAACI,EAAE,CAAC9D,OAAH,CAAW,CAAX,CAAF,EAAiB,CAAjB,CAFI;AAVR,KAvCM;AAjHc,GAAxB;;AA0KA,MAAI0B,MAAM,KAAKf,QAAX,IAAuBC,UAAU,KAAKD,QAAtC,IAAkDO,WAAW,KAAKP,QAAtE,EAAgF;AAC9EqE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,MAFqB;AAG5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAHoB;AAQ5BC,MAAAA,IAAI,EAAE,IARsB;AAS5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI1F,EAAJ,CADI,EAEJ,CAAC,CAACJ,CAAD,GAAKnB,CAAN,EAAS,MAAMqB,EAAN,IAAY,CAACF,CAAD,GAAKnB,CAAjB,IAAsBuB,EAA/B,CAFI;AATsB,KAA9B;AAeAwD,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,OAFqB;AAG5Be,MAAAA,SAAS,EAAE,UAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,aATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI5F,EAAE,GAAGyB,OAAL,GAAevB,EAAnB,CADI,EAEJ,CAACuB,OAAD,EAAUzB,EAAE,GAAGyB,OAAL,GAAevB,EAAzB,CAFI;AAVsB,KAA9B,EAhB8E,CAgC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAwD,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AAFK,OADmB;AAOjCC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAG,CAAC,IAAD,GAAQ5E,CAAT,GAAcnB,CAHZ;AAILgG,UAAAA,CAAC,EAAE,MAAM3E,EAAN,IAAa,CAAC,IAAD,GAAQF,CAAT,GAAcnB,CAA1B,IAA+BuB;AAJ7B,SADT;AAOE0D,QAAAA,IAAI,EAAE,QAAQT,UAPhB;AAQEyB,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,MATf;AAUEC,QAAAA,eAAe,EAAE,MAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OADM;AAPyB,KAAnC;AAuBD,GA9oB2B,CA+oB5B;;;AAEArB,EAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,IAAAA,IAAI,EAAE,MADsB;AAE5BC,IAAAA,SAAS,EAAE,OAFiB;AAG5Bf,IAAAA,KAAK,EAAE,QAHqB;AAI5BS,IAAAA,MAAM,EAAE;AACNvB,MAAAA,OAAO,EAAE,KADH;AAENwB,MAAAA,MAAM,EAAE,QAFF;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAJoB;AAS5BC,IAAAA,IAAI,EAAE,WATsB;AAU5BC,IAAAA,IAAI,EAAE,CACJ,CAAC,CAAClF,GAAF,EAAO,CAAP,CADI,EAEJ,CAAC,CAACA,GAAF,EAAOZ,CAAP,CAFI;AAVsB,GAA9B;AAeA4D,EAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,IAAAA,YAAY,EAAE;AACZC,MAAAA,OAAO,EAAE,CADG;AAEZC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL;AAFK,KADmB;AAOjCC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,CADF;AAELC,QAAAA,KAAK,EAAE,CAFF;AAGLC,QAAAA,CAAC,EAAE,CAAChE,GAHC;AAILiE,QAAAA,CAAC,EAAE7E,CAAC,GAAG;AAJF,OADT;AAOE8D,MAAAA,IAAI,EAAE,eAAe,CAAClD,GAAhB,GAAsB,OAP9B;AAQEkE,MAAAA,WAAW,EAAE,CARf;AASE;AACAE,MAAAA,eAAe,EAAE,QAVnB;AAWEV,MAAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT;AAXT,KADM;AAPyB,GAAnC;;AAwBA,MAAI,CAACnE,OAAD,KAAa,CAAb,IAAkBtB,UAAU,KAAKD,QAAjC,IAA6CO,WAAW,KAAKP,QAAjE,EAA2E;AACzEqE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BC,MAAAA,EAAE,EAAE,cADwB;AAE5BH,MAAAA,IAAI,EAAE,MAFsB;AAG5Bd,MAAAA,KAAK,EAAE,WAHqB;AAI5Be,MAAAA,SAAS,EAAE,UAJiB;AAK5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OALoB;AAU5BC,MAAAA,IAAI,EAAE,uBAVsB;AAW5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI9F,CAAJ,CADI,EAEJ,CAAC,CAACA,CAAD,IAAMnB,CAAC,IAAI,IAAIiC,OAAO,GAAG,GAAlB,CAAP,CAAD,EAAiC,CAAjC,CAFI;AAXsB,KAA9B;AAgBA8C,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCC,MAAAA,EAAE,EAAE,QAD6B;AAEjC9B,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AAFK,OAFmB;AAQjCC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAC5E,CAAD,IAAM,IAAInB,CAAJ,IAAS,IAAIiC,OAAO,GAAG,GAAvB,CAAN,CAHE;AAIL+D,UAAAA,CAAC,EAAGhG,CAAC,IAAI,IAAIiC,OAAO,GAAG,GAAlB,CAAD,GAA0B,CAACd,CAA5B,IAAkC,IAAInB,CAAJ,IAAS,IAAIiC,OAAO,GAAG,GAAvB,CAAlC,IAAiEd;AAJ/D,SADT;AAOE8D,QAAAA,IAAI,EAAE,mBAPR;AAQEgB,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,WATf;AAUEC,QAAAA,eAAe,EAAE,WAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OADM;AARyB,KAAnC;AAwBD,GAjuB2B,CAmuB5B;;;AACA,MAAI,CAACzF,UAAD,KAAgBD,QAApB,EAA8B;AAC5BqE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,OAFqB;AAG5Be,MAAAA,SAAS,EAAE,OAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,GATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI,CAAC7G,GAAL,CADI,EAEJ,CAACO,UAAD,EAAawB,QAAb,CAFI,EAGJ,CAAC,CAAC3B,IAAD,GAAQF,IAAT,EAAe,CAAf,CAHI;AAVsB,KAA9B;AAgBAyE,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AAFK,OADmB;AAOjCC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAEpF,UAAU,GAAG,CAHX;AAILqF,UAAAA,CAAC,EAAE9F,GAAG,IAAIS,UAAU,GAAG,CAAjB,CAAH,GAAyBP;AAJvB,SADT;AAOE6E,QAAAA,IAAI,EAAE,WAAqB/E,GAArB,GAA2B,MAA3B,GAAoCE,GAP5C;AAQE6F,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,OATf;AAUEC,QAAAA,eAAe,EAAE,OAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OADM,EAcN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAACpF,UAAU,GAAG,CAACH,IAAD,GAAQF,IAAtB,IAA8B,CAH5B;AAIL0F,UAAAA,CAAC,EAAE1F,IAAI,IAAI,CAACK,UAAU,GAAG,CAACH,IAAD,GAAQF,IAAtB,IAA8B,CAAlC,CAAJ,GAA2CE;AAJzC,SADT;AAOEyE,QAAAA,IAAI,EAAE,YAA2B3E,IAA3B,GAAkC,MAAlC,GAA2CE,IAPnD;AAQEyF,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,OATf;AAUEC,QAAAA,eAAe,EAAE,OAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OAdM,EA2BN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAEpF,UAAU,GAAG,CAHX;AAILqF,UAAAA,CAAC,EAAE,IAAI9F,GAAJ,IAAWS,UAAU,GAAG,CAAxB,IAA6BP;AAJ3B,SADT;AAOE6E,QAAAA,IAAI,EAAE,eAAyB,IAAI/E,GAA7B,GAAmC,MAAnC,GAA4CE,GAPpD;AAQE6F,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,YATf;AAUEC,QAAAA,eAAe,EAAE,YAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OA3BM,EAwCN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAACpF,UAAU,GAAI,CAAC,GAAD,GAAOH,IAAR,GAAgBF,IAA9B,IAAsC,CAHpC;AAIL0F,UAAAA,CAAC,EAAE,IAAI1F,IAAJ,IAAY,CAACK,UAAU,GAAI,CAAC,GAAD,GAAOH,IAAR,GAAgBF,IAA9B,IAAsC,CAAlD,IAAuDE;AAJrD,SADT;AAOEyE,QAAAA,IAAI,EAAE,gBAA+B,IAAI3E,IAAnC,GAA0C,MAA1C,GAAmDE,IAP3D;AAQEyF,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,YATf;AAUEC,QAAAA,eAAe,EAAE,YAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OAxCM;AAPyB,KAAnC;AA8DArB,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,SAAS,EAAE,OAFiB;AAG5Bf,MAAAA,KAAK,EAAE,YAHqB;AAI5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,OATsB;AAU5BC,MAAAA,IAAI,EAAEnC;AAVsB,KAA9B;AAYD;;AAED,MAAI7D,WAAW,KAAKP,QAApB,EAA8B;AAC5BqE,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCzB,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAHE;AAILC,UAAAA,CAAC,EAAEvC;AAJE,SADT;AAOEwB,QAAAA,IAAI,EAAE,4BAA4BnG,aAAa,CAAC2E,EAAD,CAPjD;AAQE4C,QAAAA,KAAK,EAAE,WART;AASEZ,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE,OAAT;AAAkBV,UAAAA,QAAQ,EAAE;AAA5B;AATT,OADM;AADyB,KAAnC;AAeD;;AAED,MAAI/E,UAAU,KAAKD,QAAf,IAA2BO,WAAW,KAAKP,QAA/C,EAAyD;AACvDqE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,SAAS,EAAE,OAFiB;AAG5Bf,MAAAA,KAAK,EAAE,YAHqB;AAI5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,OATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI9F,CAAJ,CADI,EAEJ,CAAE,CAAC,GAAD,GAAOA,CAAR,GAAanB,CAAd,EAAiB,CAAjB,CAFI;AAVsB,KAA9B;AAeA+E,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,SAAS,EAAE,OAFiB;AAG5Bf,MAAAA,KAAK,EAAE,OAHqB;AAI5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,GATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI9F,CAAJ,CADI,EAEJ,CAAC,CAACA,CAAD,GAAKnB,CAAN,EAAS,CAAT,CAFI;AAVsB,KAA9B;AAgBA+E,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AAFK,OADmB;AAOjCC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAG,CAAC,GAAD,GAAO5E,CAAR,GAAanB,CAHX;AAILgG,UAAAA,CAAC,EAAE;AAJE,SADT;AAOEf,QAAAA,IAAI,EAAE,WAAWhG,aAAa,CAAC,IAAIe,CAAL,CAAxB,GAAkC,IAAlC,GAAyCf,aAAa,CAACkC,CAAD,CAP9D;AAQE8E,QAAAA,WAAW,EAAE,CARf;AASE;AACAE,QAAAA,eAAe,EAAE,YAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAXT;AAYEkB,QAAAA,YAAY,EAAE;AAZhB,OADM,EAeN;AACE1B,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAG,CAAC,IAAD,GAAQ5E,CAAT,GAAcnB,CAHZ;AAILgG,UAAAA,CAAC,EAAE;AAJE,SADT;AAOEf,QAAAA,IAAI,EAAE,OAAOhG,aAAa,CAACe,CAAD,CAApB,GAA0B,IAA1B,GAAiCf,aAAa,CAACkC,CAAD,CAPtD;AAQE8E,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,OATf;AAUEC,QAAAA,eAAe,EAAE,OAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OAfM;AAPyB,KAAnC;AAqCD;;AAED,MAAI,CAACnF,WAAD,KAAiBP,QAArB,EAA+B;AAC7BqE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,SAAS,EAAE,OAFiB;AAG5Bf,MAAAA,KAAK,EAAE,YAHqB;AAI5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,iBATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI,CAAC9F,CAAL,CADI,EAEJ,CAAC,CAAC0B,UAAF,EAAc,CAAC9B,SAAf,CAFI,CAGJ;AACA;AAJI;AAVsB,KAA9B;AAiBAgE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,QAFqB;AAG5Be,MAAAA,SAAS,EAAE,OAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,aATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAACpE,UAAF,EAAc,CAAC9B,SAAf,CADI,EAEJ,CAAC,CAAC8B,UAAD,GAAc,CAAC5B,WAAhB,EAA6B,CAACF,SAA9B,CAFI;AAVsB,KAA9B;AAeAgE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,OAFqB;AAG5Be,MAAAA,SAAS,EAAE,OAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,aATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI9F,CAAJ,CADI,EAEJ,CAAC,CAAC0B,UAAF,EAAc7C,CAAC,GAAG,CAAC6C,UAAL,GAAkB1B,CAAhC,CAFI;AAVsB,KAA9B;AAgBA4D,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,OAFqB;AAG5Be,MAAAA,SAAS,EAAE,OAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,eATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAACpE,UAAD,GAAc,CAAChC,KAAhB,EAAuBb,CAAC,GAAG,CAAC6C,UAAL,GAAkB1B,CAAzC,CADI,EAEJ,CAAC,CAACA,CAAD,GAAKnB,CAAL,GAAS,CAACa,KAAX,EAAkB,CAAlB,CAFI;AAVsB,KAA9B;AAgBAkE,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5Bd,MAAAA,KAAK,EAAE,YAFqB;AAG5Be,MAAAA,SAAS,EAAE,OAHiB;AAI5BN,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,mBATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAACpE,UAAD,GAAc,CAAC5B,WAAhB,EAA6B,CAACF,SAA9B,CADI,EAEJ,CAAC,CAACE,WAAD,GAAe,CAACE,CAAD,IAAM,IAAInB,CAAV,CAAhB,EAA8B,CAA9B,CAFI;AAVsB,KAA9B;AAgBA+E,IAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,MAAAA,IAAI,EAAE,MADsB;AAE5BC,MAAAA,SAAS,EAAE,UAFiB;AAG5Bf,MAAAA,KAAK,EAAE,YAHqB;AAI5BS,MAAAA,MAAM,EAAE;AACNvB,QAAAA,OAAO,EAAE,KADH;AAENwB,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAJoB;AAS5BC,MAAAA,IAAI,EAAE,kBATsB;AAU5BC,MAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAI9F,CAAJ,CADI,EAEJ,CAAC,CAACA,CAAD,IAAM,IAAInB,CAAV,CAAD,EAAe,CAAf,CAFI;AAVsB,KAA9B;AAgBA+E,IAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL;AAFK,OADmB;AAOjCC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAC,CAAC9E,WAAD,GAAe,CAAC4B,UAAhB,GAA6B,CAACA,UAA/B,IAA6C,CAH3C;AAILmD,UAAAA,CAAC,EAAE,CAACjF;AAJC,SADT;AAOEkE,QAAAA,IAAI,EAAE,cAAc,CAACpE,KAAf,GAAuB,WAAvB,GAAqC/B,aAAa,CAAC,CAACiC,SAAF,CAP1D;AAQEkF,QAAAA,WAAW,EAAE,CARf;AASE;AACAE,QAAAA,eAAe,EAAE,QAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OADM,EAeN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAClD,UAAD,GAAc,GAHZ;AAILmD,UAAAA,CAAC,EAAE,IAAIhG,CAAJ,IAAS,CAAC6C,UAAD,GAAc,GAAvB,IAA8B1B;AAJ5B,SADT;AAOE8D,QAAAA,IAAI,EAAE,yCAAyClG,aAAa,CAAC,IAAI,CAACiB,CAAN,CAAtD,GAAiE,MAAjE,GAA0EjB,aAAa,CAAC,CAACoC,CAAF,CAP/F;AAQE8E,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,YATf;AAUEC,QAAAA,eAAe,EAAE,YAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OAfM,EA6BN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAClD,UAAD,GAAc,GAHZ;AAILmD,UAAAA,CAAC,EAAEhG,CAAC,IAAI,CAAC6C,UAAD,GAAc,GAAlB,CAAD,GAA0B1B;AAJxB,SADT;AAOE8D,QAAAA,IAAI,EAAE,qCAAqClG,aAAa,CAAC,CAACiB,CAAF,CAAlD,GAAyD,MAAzD,GAAkEjB,aAAa,CAAC,CAACoC,CAAF,CAPvF;AAQE8E,QAAAA,WAAW,EAAE,CARf;AASEC,QAAAA,WAAW,EAAE,OATf;AAUEC,QAAAA,eAAe,EAAE,OAVnB;AAWEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAXT,OA7BM,EA2CN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAC,CAAClD,UAAD,GAAc,CAAChC,KAAhB,IAAyB,GAHvB;AAILmF,UAAAA,CAAC,EAAE,IAAIhG,CAAJ,IAAS,CAAC6C,UAAD,GAAc,CAAChC,KAAxB,IAAiC,GAAjC,GAAuCM,CAAvC,GAA2CN,KAAK,GAAG,CAAR,GAAY,CAACb,CAJtD,CAKL;;AALK,SADT;AAQEiF,QAAAA,IAAI,EACF,yCAAyClG,aAAa,CAAC,IAAI,CAACiB,CAAN,CAAtD,GAAiE,MAAjE,GAA0EjB,aAAa,CAACoC,CAAC,GAAGN,KAAK,GAAG,CAAR,GAAY,CAACb,CAAlB,CAT3F;AAUEiG,QAAAA,WAAW,EAAE,CAVf;AAWEC,QAAAA,WAAW,EAAE,YAXf;AAYEC,QAAAA,eAAe,EAAE,YAZnB;AAaEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAbT,OA3CM,EA0DN;AACER,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,CAAC,EAAE,CAAC,CAAClD,UAAD,GAAc,CAAChC,KAAhB,IAAyB,GAHvB;AAILmF,UAAAA,CAAC,EAAEhG,CAAC,IAAI,CAAC6C,UAAD,GAAc,CAAChC,KAAnB,CAAD,GAA6B,GAA7B,GAAmCM,CAAnC,GAAuCN,KAAK,GAAG,CAACb,CAJ9C,CAKL;;AALK,SADT;AAQEiF,QAAAA,IAAI,EAAE,qCAAqClG,aAAa,CAAC,CAACiB,CAAF,CAAlD,GAAyD,MAAzD,GAAkEjB,aAAa,CAACoC,CAAC,GAAGN,KAAK,GAAG,CAACb,CAAd,CARvF;AASEiG,QAAAA,WAAW,EAAE,CATf;AAUEC,QAAAA,WAAW,EAAE,OAVf;AAWEC,QAAAA,eAAe,EAAE,OAXnB;AAYEV,QAAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT;AAZT,OA1DM;AAPyB,KAAnC;;AAiFA,QAAIvC,EAAE,GAAG,CAAChB,UAAN,IAAoBgB,EAAE,GAAG,CAAChB,UAAD,GAAc,CAAChC,KAA5C,EAAmD;AACjDkE,MAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCzB,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAE,CAHE;AAILC,YAAAA,CAAC,EAAEhG,CAAC,GAAG6C,UAAJ,GAAiB1B;AAJf,WADT;AAOE8D,UAAAA,IAAI,EAAE,qCAAqCnG,aAAa,CAACkB,CAAC,GAAG6C,UAAJ,GAAiB1B,CAAlB,CAP1D;AAQEkF,UAAAA,KAAK,EAAE,WART;AASEZ,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBV,YAAAA,QAAQ,EAAE;AAA5B;AATT,SADM;AADyB,OAAnC;AAeAX,MAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,QAAAA,IAAI,EAAE,MADsB;AAE5BC,QAAAA,SAAS,EAAE,UAFiB;AAG5Bf,QAAAA,KAAK,EAAE,OAHqB;AAI5BS,QAAAA,MAAM,EAAE;AACNvB,UAAAA,OAAO,EAAE,KADH;AAENwB,UAAAA,MAAM,EAAE,QAFF;AAGNC,UAAAA,MAAM,EAAE;AAHF,SAJoB;AAS5BC,QAAAA,IAAI,EAAE,oBATsB;AAU5BC,QAAAA,IAAI,EAAE,CACJ,CAACpE,UAAD,EAAa7C,CAAC,GAAG6C,UAAJ,GAAiB1B,CAA9B,CADI,EAEJ,CAAC,CAAD,EAAInB,CAAC,GAAG6C,UAAJ,GAAiB1B,CAArB,CAFI;AAVsB,OAA9B;AAeA4D,MAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCzB,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAElD,UAHE;AAILmD,YAAAA,CAAC,EAAE;AAJE,WADT;AAOEf,UAAAA,IAAI,EAAE,qCAAqClG,aAAa,CAAC8D,UAAD,CAAlD,GAAiE,OAPzE;AAQEwD,UAAAA,KAAK,EAAE,WART;AASEZ,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBV,YAAAA,QAAQ,EAAE;AAA5B;AATT,SADM;AADyB,OAAnC;AAgBAX,MAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,QAAAA,IAAI,EAAE,MADsB;AAE5BC,QAAAA,SAAS,EAAE,UAFiB;AAG5Bf,QAAAA,KAAK,EAAE,OAHqB;AAI5BS,QAAAA,MAAM,EAAE;AACNvB,UAAAA,OAAO,EAAE,KADH;AAENwB,UAAAA,MAAM,EAAE,QAFF;AAGNC,UAAAA,MAAM,EAAE;AAHF,SAJoB;AAS5BC,QAAAA,IAAI,EAAE,8BATsB;AAU5BC,QAAAA,IAAI,EAAE,CACJ,CAACpE,UAAD,EAAa,CAAb,CADI,EAEJ,CAACA,UAAD,EAAa7C,CAAC,GAAG6C,UAAJ,GAAiB1B,CAA9B,CAFI;AAVsB,OAA9B;AAeD;;AAED,QAAI0C,EAAE,GAAG,CAAChB,UAAV,EAAsB;AACpBkC,MAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCzB,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAE,CAHE;AAILC,YAAAA,CAAC,EAAEjF;AAJE,WADT;AAOEkE,UAAAA,IAAI,EAAE,kCAAkCnG,aAAa,CAACiC,SAAD,CAPvD;AAQEsF,UAAAA,KAAK,EAAE,WART;AASEZ,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBV,YAAAA,QAAQ,EAAE;AAA5B;AATT,SADM;AADyB,OAAnC;AAeD;;AAED,QAAI7B,EAAE,GAAG,CAAChB,UAAV,EAAsB;AACpBkC,MAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjCzB,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAE,CAHE;AAILC,YAAAA,CAAC,EAAEhG,CAAC,GAAG6D,EAAJ,GAAS1C;AAJP,WADT;AAOE8D,UAAAA,IAAI,EAAE,qCAAqCnG,aAAa,CAACkB,CAAC,GAAG6D,EAAJ,GAAS1C,CAAV,CAP1D;AAQEkF,UAAAA,KAAK,EAAE,WART;AASEZ,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBV,YAAAA,QAAQ,EAAE;AAA5B;AATT,SADM;AADyB,OAAnC;AAeD;;AAED,QAAI7B,EAAE,IAAI,CAAChB,UAAD,GAAc,CAAChC,KAAzB,EAAgC;AAC9BkE,MAAAA,iBAAiB,CAACvF,WAAlB,CAA8B4H,IAA9B,CAAmC;AACjC7B,QAAAA,YAAY,EAAE;AACZC,UAAAA,OAAO,EAAE,CADG;AAEZC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE;AADL;AAFK,SADmB;AAOjCC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAE,CAHE;AAILC,YAAAA,CAAC,EAAEhG,CAAC,IAAI6D,EAAE,GAAG5C,WAAT,CAAD,GAAyBE;AAJvB,WADT;AAOE8D,UAAAA,IAAI,EAAE,qCAAqCnG,aAAa,CAACkB,CAAC,IAAI6D,EAAE,GAAG5C,WAAT,CAAD,GAAyBE,CAA1B,CAP1D;AAQEkF,UAAAA,KAAK,EAAE,WART;AASEZ,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBV,YAAAA,QAAQ,EAAE;AAA5B;AATT,SADM,EAaN;AACEE,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,CADF;AAELC,YAAAA,KAAK,EAAE,CAFF;AAGLC,YAAAA,CAAC,EAAE,CAHE;AAILC,YAAAA,CAAC,EAAE,CAACjF;AAJC,WADT;AAOEkE,UAAAA,IAAI,EAAE,kCAAkCnG,aAAa,CAAC,CAACiC,SAAF,CAPvD;AAQEuF,UAAAA,KAAK,EAAE,OART;AASEL,UAAAA,WAAW,EAAE,CATf;AAUEC,UAAAA,WAAW,EAAE,EAVf;AAWEC,UAAAA,eAAe,EAAE,EAXnB;AAYEV,UAAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAT;AAZT,SAbM;AAPyB,OAAnC;AAoCArB,MAAAA,iBAAiB,CAAC6B,MAAlB,CAAyBQ,IAAzB,CAA8B;AAC5BF,QAAAA,IAAI,EAAE,MADsB;AAE5BC,QAAAA,SAAS,EAAE,UAFiB;AAG5Bf,QAAAA,KAAK,EAAE,OAHqB;AAI5BS,QAAAA,MAAM,EAAE;AACNvB,UAAAA,OAAO,EAAE,KADH;AAENwB,UAAAA,MAAM,EAAE,QAFF;AAGNC,UAAAA,MAAM,EAAE;AAHF,SAJoB;AAS5BC,QAAAA,IAAI,EAAE,YATsB;AAU5BC,QAAAA,IAAI,EAAE,CACJ,CAAC,CAAD,EAAIlG,SAAJ,CADI,EAEJ,CAAC8B,UAAD,EAAa9B,SAAb,CAFI;AAVsB,OAA9B;AAeD;AACF,GAruC2B,CAuuC5B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AACA,MAAIwG,YAAY,GAAG;AAAE;AAAF,GAAnB,CApvC4B,CAsvC5B;AACA;;AACA,MAAI5E,IAAI,CAAC6E,GAAL,CAASxH,CAAT,IAAc,IAAd,IAAsB,CAACyH,WAAvB,IAAsC,CAACC,QAA3C,EAAqD;AAAE;AACnD/H,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EADiD,CAEjD;AACA;AACA;;AACA,QAAI+H,SAAS,GAAGhF,IAAI,CAACC,GAAL,CAAS,GAAT,EAAczB,CAAC,GAAG,GAAlB,EAAuBI,EAAE,GAAG,GAA5B,CAAhB;AACA,QAAIqG,SAAS,GAAG,GAAhB,CANiD,CAM5B;;AACrB,QAAIjF,IAAI,CAAC6E,GAAL,CAASnG,EAAT,IAAe,IAAnB,EAAyB;AACrB,UAAIwG,YAAY,GAAG,CAAC1G,CAAC,GAAGI,EAAL,IAAWF,EAA9B;;AACA,UAAIwG,YAAY,GAAG,CAAf,IAAoBC,QAAQ,CAACD,YAAD,CAAhC,EAAgD;AAC5CD,QAAAA,SAAS,GAAGjF,IAAI,CAACC,GAAL,CAAS,GAAT,EAAciF,YAAY,GAAG,CAA7B,CAAZ;AACH;AACJ;;AAEDN,IAAAA,YAAY,GAAG;AACX;AACA1B,MAAAA,KAAK,EAAE;AAAE7C,QAAAA,GAAG,EAAE,CAAP;AAAUJ,QAAAA,GAAG,EAAEgF,SAAf;AAA0B5C,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAAjC,OAFI;AAGXa,MAAAA,KAAK,EAAE;AAAE9C,QAAAA,GAAG,EAAE,CAAP;AAAUJ,QAAAA,GAAG,EAAE+E,SAAf;AAA0B3C,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAAjC,OAHI;AAIX2B,MAAAA,MAAM,EAAE,CACJ;AACII,QAAAA,IAAI,EAAE,GADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI9F,CAAJ,CAAD,EAAS,CAACyG,SAAD,EAAYzG,CAAZ,CAAT,CAFV;AAEoC;AAChCiF,QAAAA,KAAK,EAAE,OAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OADI,EAOJ;AACI0B,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI9F,CAAJ,CAAD,EAAS,CAACyG,SAAD,EAAYzG,CAAZ,CAAT,CAFV;AAEoC;AAChCiF,QAAAA,KAAK,EAAE,MAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OAPI,EAaJ;AACI0B,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI1F,EAAJ,CAAD,EAAU,CAACqG,SAAD,EAAYvG,EAAE,GAAGuG,SAAL,GAAiBrG,EAA7B,CAAV,CAFV;AAEuD;AACnD6E,QAAAA,KAAK,EAAE,KAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OAbI,CAmBJ;AACA;AApBI,OAJG,CA0BX;;AA1BW,KAAf;AA4BH,GA1CD,MA0CO;AACH;AACA;AACA3F,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAHG,CAIH;AACA;;AACC,QAAI+H,UAAS,GAAGhF,IAAI,CAACC,GAAL,CAAS,GAAT,EAAczB,CAAC,GAAG,GAAlB,EAAuBI,EAAE,GAAG,GAA5B,CAAhB;;AACA,QAAIqG,UAAS,GAAGjF,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc,CAACzB,CAAD,GAAGnB,CAAH,GAAO,GAArB,CAAhB,CAPE,CAOyC;;;AAE5CuH,IAAAA,YAAY,GAAG;AACX;AACC1B,MAAAA,KAAK,EAAE;AAAE7C,QAAAA,GAAG,EAAE,CAAP;AAAUJ,QAAAA,GAAG,EAAEgF,UAAf;AAA0B5C,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAAjC,OAFG;AAGVa,MAAAA,KAAK,EAAE;AAAE9C,QAAAA,GAAG,EAAE,CAAP;AAAUJ,QAAAA,GAAG,EAAE+E,UAAf;AAA0B3C,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAAjC,OAHG;AAIV2B,MAAAA,MAAM,EAAE,CACJ;AACII,QAAAA,IAAI,EAAE,GADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI9F,CAAJ,CAAD,EAAS,CAAC,CAACA,CAAD,GAAGnB,CAAJ,EAAO,CAAP,CAAT,EAAoB+H,MAApB,CAA2B,UAAAC,CAAC;AAAA,iBAAIF,QAAQ,CAACE,CAAC,CAAC,CAAD,CAAF,CAAR,IAAkBF,QAAQ,CAACE,CAAC,CAAC,CAAD,CAAF,CAA9B;AAAA,SAA5B,CAFV;AAGI5B,QAAAA,KAAK,EAAE,OAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OADI,EAOJ;AACI0B,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI9F,CAAJ,CAAD,EAAS,CAAC,CAAC,GAAD,GAAKA,CAAL,GAAOnB,CAAR,EAAW,CAAX,CAAT,EAAwB+H,MAAxB,CAA+B,UAAAC,CAAC;AAAA,iBAAIF,QAAQ,CAACE,CAAC,CAAC,CAAD,CAAF,CAAR,IAAkBF,QAAQ,CAACE,CAAC,CAAC,CAAD,CAAF,CAA9B;AAAA,SAAhC,CAFV;AAGI5B,QAAAA,KAAK,EAAE,MAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OAPI,EAaJ;AACI0B,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI1F,EAAJ,CAAD,EAAU,CAACqG,UAAD,EAAYvG,EAAE,GAAGuG,UAAL,GAAiBrG,EAA7B,CAAV,CAFV;AAGI6E,QAAAA,KAAK,EAAE,KAHX;AAIIS,QAAAA,MAAM,EAAE;AAAEvB,UAAAA,OAAO,EAAE;AAAX;AAJZ,OAbI,CAmBH;AACD;AApBI,OAJE,CA0BX;;AA1BW,KAAf;AA4BH,GAv0C2B,CAy0C5B;;;AACA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAE1G,UAA7B;AAAyC,IAAA,OAAO,EAAE2I,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAHJ,CADF;AAcD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Toggle from './ToggleRenderProps';\n\nimport { Row, Col, FormControl, Button } from 'react-bootstrap';\nimport 'chartjs-plugin-annotation';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport './styles.css';\nimport {\n  numberFormat1,\n  numberFormat2,\n  numberFormat3,\n  numberFormat4,\n  numberFormat5,\n  numberFormat6,\n} from './lib';\nimport Container from 'react-bootstrap/Container';\n\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Import modules separately - DO NOT initialize yet\nimport exporting from 'highcharts/modules/exporting';\nimport annotations from 'highcharts/modules/annotations';\nimport highchartsMore from 'highcharts/highcharts-more';\n\nexport function optimering2() {\n  // Initialize modules inside useEffect ONCE\n  useEffect(() => {\n    console.log(\"Initializing Highcharts modules...\");\n    exporting(Highcharts);      // Initialize exporting module\n    annotations(Highcharts);    // Initialize annotations module\n    highchartsMore(Highcharts); // Initialize highcharts-more\n    \n    // If pattern-fill-v2 is imported, initialize it here too\n    // patternFill(Highcharts); // Example\n\n    // Or if pattern-fill is loaded via a script tag, try accessing Highcharts\n    // This is less ideal but might be necessary depending on how pattern-fill works\n    if (typeof window.PatternFill !== 'undefined') {\n        console.log(\"Attempting to initialize pattern-fill globally?\");\n        // You might need a specific initialization method for pattern-fill\n    }\n\n    console.log(\"Highcharts modules initialized.\");\n\n  }, []); // Empty dependency array ensures this runs only once\n\n  var [a, seta] = useState(+(-1).toFixed(2));\n  var [aop, setaop] = useState(+(-0.5).toFixed(2));\n  var [bop, setbop] = useState(+(100).toFixed(2));\n  var [aned, setaned] = useState(+(-1).toFixed(2));\n  var [bned, setbned] = useState(+(125).toFixed(2));\n  var [knækmængde, setknækmængde] = useState(+Infinity);\n  const [ordre, setordre] = useState(+(20).toFixed(2));\n  const [ordrepris, setordrepris] = useState(+(64).toFixed(2));\n  var [ordremængde, setordremængde] = useState(+Infinity);\n  const [b, setb] = useState(+(100).toFixed(2));\n  const [ag, setag] = useState(+(0.5).toFixed(2));\n  const [bg, setbg] = useState(+(50).toFixed(2));\n  const [gskift, setgskift] = useState(+Infinity);\n  const [ag2, setag2] = useState(+(0).toFixed(2));\n  const [bg2, setbg2] = useState(+(0).toFixed(2));\n  const [kap, setkap] = useState(+Infinity);\n  const [reklame, setreklame] = useState(+(0).toFixed(2));\n\n  var knækpris = aop * knækmængde + bop;\n\n  var knækgromsop = 2 * aop * knækmængde + bop;\n  var knækgromsned = 2 * aned * knækmængde + bned;\n\n  if (reklame !== 0) {\n    var audenreklame = a;\n    a = a / (1 + reklame / 100);\n    var reklamenævner = +100 + +reklame;\n    var reklamenævnerdecimal = (+100 + +reklame) / 100;\n  }\n  var maxx, maxy;\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    maxx = -b / a;\n    maxy = Math.max(b, 0.5 * ag * (-b / a) + bg + ordre);\n  } else {\n    if (ordremængde !== Infinity) {\n      maxx = (-0.5 * b) / a + +ordre;\n      maxy = Math.max(b, 0.5 * ag * (-b / a) + bg);\n    } else {\n      maxx = -bned / aned;\n      maxy = Math.max(bop, 0.5 * ag * (-bop / aop) + bg);\n    }\n  }\n  var ordreknæk1 = (+ordrepris - b) / (2 * a);\n  var oxfirst, ox1;\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    oxfirst = Math.max(0, (bg - b) / (2 * a - ag));\n    ox1 = Math.max(0, Math.min(2 * a < ag ? (bg - b) / (2 * a - ag) : kap, gskift, (-0.5 * b) / a, +kap));\n  }\n  if (ordremængde !== Infinity) {\n    oxfirst = Math.max(0, (bg - b) / (2 * a - ag));\n    ox1 = Math.max(\n      0,\n      Math.min(\n        (bg - b) / (2 * a - ag) <= ordreknæk1 ? (+bg - b) / (2 * a - ag) : +kap,\n\n        (bg - b) / (2 * a - ag) > ordreknæk1 && (b - 2 * a * ordremængde - bg) / (ag - 2 * a) <= ordreknæk1 + +ordre\n          ? (ordrepris - bg) / ag\n          : +kap,\n\n        (b - 2 * a * ordremængde - bg) / (ag - 2 * a) > +ordreknæk1 + +ordre\n          ? (b - 2 * a * +ordre - bg) / (ag - 2 * a)\n          : +kap,\n        -(b - 2 * a * ordre) / (2 * a),\n        gskift,\n\n        +kap\n      )\n    );\n  }\n\n  if (+knækmængde !== Infinity && ordremængde === Infinity) {\n    if (ag * +knækmængde + bg > +knækgromsop) {\n      oxfirst = Math.max(0, (bg - +bop) / (2 * +aop - ag));\n      ox1 = Math.max(0, Math.min((bg - +bop) / (2 * +aop - ag), (-0.5 * bop) / aop, +gskift, +kap));\n    } else {\n      if (ag * knækmængde + bg < knækgromsned && ordremængde === Infinity) {\n        oxfirst = Math.max(0, (bg - bned) / (2 * aned - ag));\n        ox1 = Math.max(\n          0,\n          Math.min(\n            2 * aned < +ag ? (bg - +bned) / (2 * aned - ag) : +kap,\n            Math.max(knækmængde, (-0.5 * bned) / aned),\n            gskift,\n            +kap\n          )\n        );\n      } else {\n        ox1 = Math.max(0, Math.min(knækmængde, (-0.5 * bop) / aop, gskift, +kap));\n      }\n    }\n  }\n\n  var ox2;\n  if (gskift < Infinity) {\n    if (knækmængde === Infinity) {\n      ox2 = Math.max(0, Math.min(2 * a < +ag2 ? (bg2 - b) / (2 * a - ag2) : +kap, -b / (2 * a), +kap));\n      var oxsecond = (bg2 - b) / (2 * a - ag2);\n    }\n    if (knækmængde !== Infinity) {\n      if (\n        (bg2 - bned) / (2 * aned - ag2) > knækmængde &&\n        (bg2 - bned) / (2 * aned - ag2) > gskift &&\n        (bg2 - bned) / (2 * aned - ag2) <= (-0.5 * bned) / aned\n      ) {\n        ox2 = Math.max(\n          0,\n          Math.min(\n            (bg2 - bned) / (2 * aned - ag2),\n            -bned / (2 * aned),\n\n            +kap\n          )\n        );\n      } else {\n        if (ag2 * knækmængde + bg2 <= knækgromsop && ag2 * knækmængde + bg2 >= knækgromsned) {\n          ox2 = knækmængde;\n        } else {\n          if ((bg2 - bned) / (2 * aned - ag2) < knækmængde) {\n            ox2 = Math.max(\n              0,\n              Math.min(\n                (bg2 - bop) / (2 * aop - ag2),\n\n                +kap\n              )\n            );\n          } else {\n            ox2 = 0;\n          }\n        }\n      }\n    }\n\n    if (ordremængde !== Infinity) {\n      if ((bg2 - b) / (2 * a - ag2) <= ordreknæk1) {\n        ox2 = Math.max(0, Math.min((bg2 - b) / (2 * a - ag2), -b / (2 * a), +kap));\n      }\n      if ((bg2 - b) / (2 * a - ag2) > +ordreknæk1 && (+ordrepris - bg2) / ag2 <= +ordreknæk1 + +ordre) {\n        ox2 = (+ordrepris - bg2) / ag2;\n      }\n      if ((b - 2 * a * ordre - bg2) / (ag2 - 2 * a) > +ordreknæk1 + +ordre) {\n        ox2 = Math.max(0, Math.min((b - 2 * a * ordre - bg2) / (ag2 - 2 * a), -(b - 2 * a * ordre) / (2 * a), +kap));\n      }\n    }\n  } else {\n    ox2 = 0;\n  }\n  var tvo1, tr1, tvo2, tr2, op1, op2, op;\n  op2 = -Infinity;\n  tr2 = -Infinity;\n  tvo2 = Infinity;\n  if (gskift !== Infinity) {\n    if (ox1 <= gskift) {\n      tvo1 = (0.5 * ag * ox1 + bg) * ox1;\n    }\n    if (ox1 === gskift) {\n      tvo1 = (0.5 * ag * gskift + bg) * gskift;\n    }\n    if (ox2 < gskift) {\n      tvo2 = Infinity;\n    }\n\n    if (ox1 > gskift) {\n      tvo1 = Infinity;\n    }\n    if (ox2 > gskift) {\n      if (knækmængde === Infinity) {\n        op2 = a * ox2 + b;\n        tr2 = op2 * ox2;\n      }\n      tvo2 = gskift * (0.5 * ag * gskift + bg) + (ox2 - gskift) * (0.5 * ag2 * ox2 + 0.5 * ag2 * gskift + bg2);\n    }\n  } else {\n    tvo1 = (0.5 * ag * ox1 + bg) * ox1;\n  }\n\n  if (knækmængde !== Infinity) {\n    if (ox1 <= knækmængde) {\n      op1 = aop * ox1 + bop;\n      tr1 = op1 * ox1;\n    }\n    if (ox2 <= knækmængde) {\n      op2 = aop * ox2 + bop;\n      tr2 = op2 * ox2;\n    }\n    if (ox1 > knækmængde) {\n      op1 = aned * ox1 + bned;\n      tr1 = op1 * ox1;\n    }\n    if (ox2 > knækmængde) {\n      op2 = aned * ox2 + bned;\n      tr2 = op2 * ox2;\n    }\n  }\n  if (ordremængde !== Infinity && knækmængde === Infinity) {\n    if (ox1 <= ordreknæk1) {\n      op1 = a * ox1 + b;\n      tr1 = op1 * ox1;\n    }\n    if (ox1 > +ordreknæk1 && ox1 < +ordreknæk1 + +ordre) {\n      op1 = ordrepris;\n      tr1 = ordreknæk1 * (a * ordreknæk1 + b) + ordrepris * (ox1 - ordreknæk1);\n    }\n    if (ox1 >= +ordreknæk1 + +ordre) {\n      op1 = a * (ox1 - ordre) + b;\n      tr1 = op1 * (ox1 - ordre) + ordrepris * ordre;\n    }\n\n    //########## Her skal skrives hvad ox2 op2 etc husk kun hvis knækmængde <\n\n    // if (ox2 <= knækmængde) {\n    //   op2 = aop * ox2 + bop;\n    //   tr2 = op2 * ox2;\n    // }\n\n    // if (ox2 > knækmængde) {\n    //   op2 = aned * ox2 + bned;\n    //   tr2 = op2 * ox2;\n    // }\n  }\n\n  if (ordremængde !== Infinity && gskift < Infinity) {\n    if (ox2 <= ordreknæk1) {\n      op2 = a * ox2 + b;\n      tr2 = op2 * ox2;\n    }\n    if (ox2 > +ordreknæk1 && ox2 < +ordreknæk1 + +ordre) {\n      op2 = ordrepris;\n      tr2 = ordreknæk1 * (a * ordreknæk1 + b) + ordrepris * (ox2 - ordreknæk1);\n    }\n    if (ox2 >= +ordreknæk1 + +ordre) {\n      op2 = a * (ox2 - ordre) + b;\n      tr2 = op2 * (ox2 - ordre) + ordrepris * ordre;\n    }\n\n    //########## Her skal skrives hvad ox2 op2 etc husk kun hvis knækmængde <\n\n    // if (ox2 <= knækmængde) {\n    //   op2 = aop * ox2 + bop;\n    //   tr2 = op2 * ox2;\n    // }\n\n    // if (ox2 > knækmængde) {\n    //   op2 = aned * ox2 + bned;\n    //   tr2 = op2 * ox2;\n    // }\n  }\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    op1 = a * ox1 + b;\n\n    tr1 = op1 * ox1;\n  }\n  var dbfinal, tr, tvo, ox;\n  var db1 = tr1 - tvo1;\n  var db2;\n  if (knækmængde < Infinity || gskift < Infinity) {\n    db2 = tr2 - tvo2;\n  } else {\n    db2 = -Infinity;\n  }\n  if (db1 >= db2) {\n    ox = ox1;\n    op = op1;\n    dbfinal = db1;\n    tvo = tvo1;\n    tr = tr1;\n  } else {\n    ox = ox2;\n    op = op2;\n    dbfinal = db2;\n    tvo = tvo2;\n    tr = tr2;\n  }\n  var ove = tvo / ox;\n\n  // ################################################################################################################################################################\n\n  var outside1;\n  if ((b - bg) / (ag - 2 * a) < 0 || (b - bg) / (ag - 2 * a) > gskift) {\n    outside1 = true;\n  } else {\n    outside1 = false;\n  }\n\n  var outside2;\n  if (oxsecond < gskift || oxsecond > (0.5 * -b) / a) {\n    outside2 = true;\n  } else {\n    outside2 = false;\n  }\n\n  var gromkdata, gromknavn;\n  if (gskift < Infinity) {\n    gromkdata = [\n      [0, bg],\n      [+gskift, ag * +gskift + bg],\n      [gskift, ag2 * gskift + bg2],\n      [Math.max((-bned * 2) / +aned, (-b * 2) / a), ag2 * Math.max((-bned * 2) / +aned, (-b * 2) / a) + bg2],\n    ];\n    gromknavn = 'GROMK\\u2081';\n  } else {\n    gromkdata = [\n      [0, bg],\n      [Math.max((-bned * 2) / +aned, (-b * 2) / a), ag * Math.max((-bned * 2) / +aned, (-b * 2) / a) + bg],\n    ];\n    gromknavn = 'GROMK';\n  }\n\n  var skær2;\n  if (ox1 > 0 && ox1 < Infinity && ox1 !== gskift && ox2 > 0 && ox2 < Infinity) {\n    skær2 = 1;\n  } else {\n    skær2 = 0;\n  }\n  // var tvo;\n  // gskift === Infinity\n  //   ? (tvo = ove * ox)\n  //   : ox < gskift\n  //   ? (tvo = (ox * (ag * ox + bg + bg)) / 2)\n  //   : (tvo =\n  //       (gskift * (ag * gskift + bg + bg)) / 2 +\n  //       (ox - gskift) * ((ag2 * gskift + bg2 + ag2 * ox + bg2) / 2));\n\n  var optimalx = ox.toFixed(2);\n  var optimalp = op; //rettes op.toFixed(2)\n\n  var avcligning;\n  if (ag !== 0) {\n    avcligning = numberFormat4(0.5 * ag).concat('X + ', bg);\n  } else {\n    avcligning = bg;\n  }\n\n  var gromkligning;\n  if (ag !== 0) {\n    gromkligning = numberFormat4(ag).concat('X + ', bg);\n  } else {\n    gromkligning = bg;\n  }\n\n  var gromkligning2;\n  if (ag2 !== 0) {\n    gromkligning2 = numberFormat4(ag2).concat('X + ', bg2);\n  } else {\n    gromkligning2 = bg2;\n  }\n\n  var gromkligningkort;\n  if (ag !== 0) {\n    gromkligningkort = '';\n  } else {\n    gromkligningkort = ' = ' + bg;\n  }\n\n  var tvoligning2;\n  if (ag !== 0) {\n    tvoligning2 = '';\n  } else {\n    tvoligning2 = ' = ' + bg + 'X';\n  }\n\n  var knækgroms;\n  if (knækgromsned > 0) {\n    knækgroms = [\n      [0, +bop],\n      [knækmængde, knækgromsop],\n      [knækmængde, knækgromsned],\n      [(-0.5 * bned) / aned, 0],\n    ];\n  } else {\n    knækgroms = [\n      [0, +bop],\n      [knækmængde, knækgromsop],\n      [knækmængde, knækgromsned],\n    ];\n  }\n\n  var optionshighcharts = {\n    title: {\n      text:\n        'P\\u1D52\\u1D56\\u1D57=' +\n        numberFormat1(op) +\n        ' X\\u1D52\\u1D56\\u1D57=' +\n        numberFormat3(ox) +\n        ' stk. DB\\u1D52\\u1D56\\u1D57=' +\n        numberFormat1(dbfinal),\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          menuItems: [\n            'viewFullscreen',\n            'separator',\n            // \"downloadPNG\",\n            'downloadPDF',\n            // \"downloadSVG\",\n          ],\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    annotations: [\n      {\n        labelOptions: {\n          // backgroundColor: \"rgba(255,255,255,1)\",\n          // backgroundColor: \"rgba(252, 255, 197, 1)\",\n          // verticalAlign: \"top\",\n          padding: 2,\n\n          style: {\n            fontSize: '0.6em',\n          },\n        },\n        labels: [\n          {\n            // align: \"left\",\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: Math.min(0.5 * +ox1, 0.5 * +gskift),\n              y: +ag * Math.min(0.5 * +ox1, 0.5 * +gskift) + bg,\n            },\n            text: gromknavn + '=' + gromkligning,\n            borderWidth: 1,\n            borderColor: 'red',\n            backgroundColor: 'red',\n            style: { color: 'white' },\n          },\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: Math.max((gskift + -bned / aned) / 2, (gskift + -b / a) / 2),\n              y: (+ag2 * Math.max((gskift + -bned / aned) / 2, (gskift + -b / a) / 2)) / 2 + bg2,\n            },\n            text: 'GROMK\\u2082=' + gromkligning2,\n            borderWidth: 1,\n            borderColor: 'red',\n            backgroundColor: 'red',\n            style: { color: 'white' },\n          },\n        ],\n      },\n      {\n        labelOptions: {\n          shape: 'connector',\n          align: 'right',\n          justify: false,\n          crop: true,\n          style: {\n            fontSize: '0.8em',\n            textOutline: '0px white',\n          },\n        },\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: ox,\n              y: 0,\n            },\n            text: 'X\\u1D52\\u1D56\\u1D57<br>' + numberFormat3(ox) + ' stk.',\n          },\n        ],\n      },\n    ],\n    xAxis: {\n      title: {\n        text: 'Afsætning',\n      },\n      gridLineWidth: 1,\n      min: 0,\n      max: maxx,\n      labels: {\n        format: '{value} stk.',\n      },\n    },\n    yAxis: {\n      title: {\n        text: null,\n      },\n      min: 0,\n      max: maxy,\n      labels: {\n        format: '{value} DKK.',\n      },\n    },\n    series: [\n      {\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 3,\n        },\n        name: 'Optimal P',\n        data: [[ox.toFixed(2), +op]], //ret op.toFixed(2)\n      },\n\n      {\n        type: 'line',\n        color: 'red',\n\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        name: 'GROMK',\n        data: gromkdata,\n      },\n\n      {\n        type: 'line',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        dashStyle: 'ShortDot',\n        name: 'Optimal P',\n        data: [\n          [0, +op],\n          [+ox.toFixed(2), +op], //ret op.toFixed(2)\n        ],\n      },\n      {\n        type: 'line',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        dashStyle: 'ShortDot',\n        name: 'Optimal X',\n        data: [\n          [+ox.toFixed(2), +op], //ret op.toFixed(2)\n          [+ox.toFixed(2), 0],\n        ],\n      },\n    ],\n  };\n\n  if (gskift === Infinity && knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'grey',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'VE',\n      data: [\n        [0, bg],\n        [-b / a, 0.5 * ag * (-b / a) + bg],\n      ],\n    });\n\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'black',\n      dashStyle: 'ShortDot',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS=GROMK',\n      data: [\n        [0, ag * oxfirst + bg],\n        [oxfirst, ag * oxfirst + bg],\n      ],\n    });\n\n    // optionshighcharts.series.push({\n    //   dataSorting: {\n    //     enabled: false,\n    //   },\n    //   name: \"DB\",\n    //   type: \"polygon\",\n    //   data: [\n    //     [0, ove],\n    //     [ox, ove],\n    //     [ox, op],\n    //     [0, op],\n    //   ],\n    //   color: \"rgb(0,255,0,.1)\",\n    // });\n    // optionshighcharts.series.push({\n    //   dataSorting: {\n    //     enabled: false,\n    //   },\n    //   name: \"TVO\",\n    //   type: \"polygon\",\n    //   data: [\n    //     [0, ove],\n    //     [ox, ove],\n    //     [ox, 0],\n    //     [0, 0],\n    //   ],\n    //   color: \"rgb(0,0,0,.10)\",\n    // });\n\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em',\n        },\n      },\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (-0.95 * b) / a,\n            y: 0.5 * ag * ((-0.95 * b) / a) + bg,\n          },\n          text: 'VE=' + avcligning,\n          borderWidth: 0,\n          borderColor: 'grey',\n          backgroundColor: 'grey',\n          style: { color: 'white' },\n        },\n      ],\n    });\n  }\n  //Kapacitetlinje\n\n  optionshighcharts.series.push({\n    type: 'line',\n    dashStyle: 'Solid',\n    color: 'orange',\n    marker: {\n      enabled: false,\n      symbol: 'circle',\n      radius: 0,\n    },\n    name: 'Kapacitet',\n    data: [\n      [+kap, 0],\n      [+kap, b],\n    ],\n  });\n  optionshighcharts.annotations.push({\n    labelOptions: {\n      padding: 2,\n      style: {\n        fontSize: '0.6em',\n      },\n    },\n    labels: [\n      {\n        point: {\n          xAxis: 0,\n          yAxis: 0,\n          x: +kap,\n          y: b * 0.9,\n        },\n        text: 'Kapacitet ' + +kap + ' Stk.',\n        borderWidth: 0,\n        // borderColor: \"red\",\n        backgroundColor: 'orange',\n        style: { color: 'black' },\n      },\n    ],\n  });\n\n  if (+reklame !== 0 && knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      id: 'series-22312',\n      type: 'line',\n      color: 'lightgrey',\n      dashStyle: 'ShortDot',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'Før afsætningsændring',\n      data: [\n        [0, b],\n        [-b / (a * (1 + reklame / 100)), 0],\n      ],\n    });\n    optionshighcharts.annotations.push({\n      id: 'anno-2',\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em',\n        },\n      },\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: -b / (2 * a * (1 + reklame / 100)),\n            y: (a * (1 + reklame / 100) * -b) / (2 * a * (1 + reklame / 100)) + b,\n          },\n          text: 'Før<br /> ændring',\n          borderWidth: 0,\n          borderColor: 'lightgrey',\n          backgroundColor: 'lightgrey',\n          style: { color: 'black' },\n        },\n      ],\n    });\n  }\n\n  //Kapacitetlinje\n  if (+knækmængde !== Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'P',\n      data: [\n        [0, +bop],\n        [knækmængde, knækpris],\n        [-bned / aned, 0],\n      ],\n    });\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em',\n        },\n      },\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: knækmængde / 2,\n            y: aop * (knækmængde / 2) + bop,\n          },\n          text: 'P\\u006F\\u0070 = ' + aop + 'X + ' + bop,\n          borderWidth: 0,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          style: { color: 'white' },\n        },\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (knækmængde + -bned / aned) / 2,\n            y: aned * ((knækmængde + -bned / aned) / 2) + bned,\n          },\n          text: 'P\\u006E\\u0065\\u0064 = ' + aned + 'X + ' + bned,\n          borderWidth: 0,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          style: { color: 'white' },\n        },\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: knækmængde / 2,\n            y: 2 * aop * (knækmængde / 2) + bop,\n          },\n          text: 'GROMS\\u006F\\u0070 = ' + 2 * aop + 'X + ' + bop,\n          borderWidth: 0,\n          borderColor: 'lightgreen',\n          backgroundColor: 'lightgreen',\n          style: { color: 'black' },\n        },\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (knækmængde + (-0.5 * bned) / aned) / 2,\n            y: 2 * aned * ((knækmængde + (-0.5 * bned) / aned) / 2) + bned,\n          },\n          text: 'GROMS\\u006E\\u0065\\u0064 = ' + 2 * aned + 'X + ' + bned,\n          borderWidth: 0,\n          borderColor: 'lightgreen',\n          backgroundColor: 'lightgreen',\n          style: { color: 'black' },\n        },\n      ],\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS',\n      data: knækgroms,\n    });\n  }\n\n  if (ordremængde === Infinity) {\n    optionshighcharts.annotations.push({\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: 0,\n            y: op,\n          },\n          text: 'P\\u1D52\\u1D56\\u1D57<br>' + numberFormat1(op),\n          shape: 'connector',\n          style: { color: 'black', fontSize: '0.8em' },\n        },\n      ],\n    });\n  }\n\n  if (knækmængde === Infinity && ordremængde === Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS',\n      data: [\n        [0, b],\n        [(-0.5 * b) / a, 0],\n      ],\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'green',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'P',\n      data: [\n        [0, b],\n        [-b / a, 0],\n      ],\n    });\n\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em',\n        },\n      },\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (-0.5 * b) / a,\n            y: 2,\n          },\n          text: 'GROMS=' + numberFormat4(2 * a) + 'X+' + numberFormat4(b),\n          borderWidth: 0,\n          // borderColor: \"lightgreen\",\n          backgroundColor: 'lightgreen',\n          style: { color: 'black' },\n          borderRadius: 5,\n        },\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (-0.95 * b) / a,\n            y: 2,\n          },\n          text: 'P=' + numberFormat4(a) + 'X+' + numberFormat4(b),\n          borderWidth: 1,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          style: { color: 'white' },\n        },\n      ],\n    });\n  }\n\n  if (+ordremængde !== Infinity) {\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'Solid',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS før ordre',\n      data: [\n        [0, +b],\n        [+ordreknæk1, +ordrepris],\n        // [+ordreknæk1 + +ordremængde, +ordrepris],\n        // [+ordremængde + -b / (2 * a), 0],\n      ],\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'yellow',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS ordre',\n      data: [\n        [+ordreknæk1, +ordrepris],\n        [+ordreknæk1 + +ordremængde, +ordrepris],\n      ],\n    });\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'P før ordre',\n      data: [\n        [0, b],\n        [+ordreknæk1, a * +ordreknæk1 + b],\n      ],\n    });\n\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'green',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'P efter ordre',\n      data: [\n        [+ordreknæk1 + +ordre, a * +ordreknæk1 + b],\n        [-b / a + +ordre, 0],\n      ],\n    });\n\n    optionshighcharts.series.push({\n      type: 'line',\n      color: 'lightgreen',\n      dashStyle: 'Solid',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS efter ordre',\n      data: [\n        [+ordreknæk1 + +ordremængde, +ordrepris],\n        [+ordremængde + -b / (2 * a), 0],\n      ],\n    });\n\n    optionshighcharts.series.push({\n      type: 'line',\n      dashStyle: 'ShortDot',\n      color: 'lightgreen',\n      marker: {\n        enabled: false,\n        symbol: 'circle',\n        radius: 2,\n      },\n      name: 'GROMS uden ordre',\n      data: [\n        [0, b],\n        [-b / (2 * a), 0],\n      ],\n    });\n\n    optionshighcharts.annotations.push({\n      labelOptions: {\n        padding: 2,\n        style: {\n          fontSize: '0.6em',\n        },\n      },\n      labels: [\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (+ordremængde + +ordreknæk1 + +ordreknæk1) / 2,\n            y: +ordrepris,\n          },\n          text: 'Ordre på ' + +ordre + ' Stk. af ' + numberFormat1(+ordrepris),\n          borderWidth: 0,\n          // borderColor: \"red\",\n          backgroundColor: 'yellow',\n          style: { color: 'black' },\n        },\n\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: +ordreknæk1 * 0.8,\n            y: 2 * a * (+ordreknæk1 * 0.8) + b,\n          },\n          text: 'Groms\\u2071\\u207F\\u1D48\\u1D49\\u207F=' + numberFormat2(2 * +a) + 'X + ' + numberFormat2(+b),\n          borderWidth: 0,\n          borderColor: 'lightgreen',\n          backgroundColor: 'lightgreen',\n          style: { color: 'black' },\n        },\n\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: +ordreknæk1 * 0.8,\n            y: a * (+ordreknæk1 * 0.8) + b,\n          },\n          text: 'P\\u2071\\u207F\\u1D48\\u1D49\\u207F=' + numberFormat2(+a) + 'X + ' + numberFormat2(+b),\n          borderWidth: 0,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          style: { color: 'white' },\n        },\n\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (+ordreknæk1 + +ordre) * 1.2,\n            y: 2 * a * (+ordreknæk1 + +ordre) * 1.2 + b + ordre * 2 * -a,\n            // y: 50,\n          },\n          text:\n            'Groms\\u1D49\\u1da0\\u1D57\\u1D49\\u02B3=' + numberFormat2(2 * +a) + 'X + ' + numberFormat2(b + ordre * 2 * -a),\n          borderWidth: 0,\n          borderColor: 'lightgreen',\n          backgroundColor: 'lightgreen',\n          style: { color: 'black' },\n        },\n        {\n          point: {\n            xAxis: 0,\n            yAxis: 0,\n            x: (+ordreknæk1 + +ordre) * 1.2,\n            y: a * (+ordreknæk1 + +ordre) * 1.2 + b + ordre * -a,\n            // y: 50,\n          },\n          text: 'P\\u1D49\\u1da0\\u1D57\\u1D49\\u02B3=' + numberFormat2(+a) + 'X + ' + numberFormat2(b + ordre * -a),\n          borderWidth: 0,\n          borderColor: 'green',\n          backgroundColor: 'green',\n          style: { color: 'white' },\n        },\n      ],\n    });\n    if (ox > +ordreknæk1 && ox < +ordreknæk1 + +ordre) {\n      optionshighcharts.annotations.push({\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: 0,\n              y: a * ordreknæk1 + b,\n            },\n            text: 'P\\u1D52\\u1D56\\u1D57 markedet<br>' + numberFormat1(a * ordreknæk1 + b),\n            shape: 'connector',\n            style: { color: 'black', fontSize: '0.8em' },\n          },\n        ],\n      });\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        name: 'Optimal P markedet',\n        data: [\n          [ordreknæk1, a * ordreknæk1 + b],\n          [0, a * ordreknæk1 + b],\n        ],\n      });\n      optionshighcharts.annotations.push({\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: ordreknæk1,\n              y: 0,\n            },\n            text: 'X\\u1D52\\u1D56\\u1D57 markedet<br>' + numberFormat2(ordreknæk1) + ' stk.',\n            shape: 'connector',\n            style: { color: 'black', fontSize: '0.8em' },\n          },\n        ],\n      });\n\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        name: 'X\\u1D52\\u1D56\\u1D57 markedet',\n        data: [\n          [ordreknæk1, 0],\n          [ordreknæk1, a * ordreknæk1 + b],\n        ],\n      });\n    }\n\n    if (ox > +ordreknæk1) {\n      optionshighcharts.annotations.push({\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: 0,\n              y: ordrepris,\n            },\n            text: 'P\\u1D52\\u1D56\\u1D57 ordre<br>' + numberFormat1(ordrepris),\n            shape: 'connector',\n            style: { color: 'black', fontSize: '0.8em' },\n          },\n        ],\n      });\n    }\n\n    if (ox < +ordreknæk1) {\n      optionshighcharts.annotations.push({\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: 0,\n              y: a * ox + b,\n            },\n            text: 'P\\u1D52\\u1D56\\u1D57 markedet<br>' + numberFormat1(a * ox + b),\n            shape: 'connector',\n            style: { color: 'black', fontSize: '0.8em' },\n          },\n        ],\n      });\n    }\n\n    if (ox >= +ordreknæk1 + +ordre) {\n      optionshighcharts.annotations.push({\n        labelOptions: {\n          padding: 2,\n          style: {\n            fontSize: '0.8em',\n          },\n        },\n        labels: [\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: 0,\n              y: a * (ox - ordremængde) + b,\n            },\n            text: 'P\\u1D52\\u1D56\\u1D57 markedet<br>' + numberFormat1(a * (ox - ordremængde) + b),\n            shape: 'connector',\n            style: { color: 'black', fontSize: '0.8em' },\n          },\n\n          {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: 0,\n              y: +ordrepris,\n            },\n            text: 'P\\u1D52\\u1D56\\u1D57 ordre<br>' + numberFormat1(+ordrepris),\n            align: 'right',\n            borderWidth: 0,\n            borderColor: '',\n            backgroundColor: '',\n            style: { color: 'black' },\n          },\n        ],\n      });\n      optionshighcharts.series.push({\n        type: 'line',\n        dashStyle: 'ShortDot',\n        color: 'black',\n        marker: {\n          enabled: false,\n          symbol: 'circle',\n          radius: 2,\n        },\n        name: 'P markedet',\n        data: [\n          [0, ordrepris],\n          [ordreknæk1, ordrepris],\n        ],\n      });\n    }\n  }\n\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n  // ################################################################################################################################################################\n\n  // --- Chart Options Calculation ---\n  // IMPORTANT: The calculation of chartOptions should still happen here\n  // based on the state variables (a, b, ag, bg, etc.)\n  // This useEffect only handles the one-time MODULE initialization.\n\n  // Example structure of how chartOptions might be defined inside the component:\n  let chartOptions = { /* ... your dynamic chart options ... */ };\n\n  // Calculation logic for a=0 needs to be inside the component body\n  // or a function called from it, so it updates on state changes.\n  if (Math.abs(a) < 1e-9 && !isOligopoly && !hasOrder) { // Check for perfect competition\n      console.log(\"Adjusting chart options for Perfect Competition (a=0)\");\n      // Example: Modify series for horizontal lines\n      // This logic needs access to state variables like 'b', 'bg', 'ag'\n      // Ensure these calculations are performed correctly based on current state\n      let maxYValue = Math.max(300, b * 1.5, bg * 1.5);\n      let maxXValue = 200; // Or calculate based on equilibrium\n      if (Math.abs(ag) > 1e-9) {\n          let equilibriumX = (b - bg) / ag;\n          if (equilibriumX > 0 && isFinite(equilibriumX)) {\n              maxXValue = Math.max(200, equilibriumX * 2);\n          }\n      }\n      \n      chartOptions = {\n          // ... Base options ...\n          xAxis: { min: 0, max: maxXValue, title: {text: 'Mængde'} },\n          yAxis: { min: 0, max: maxYValue, title: {text: 'DKK'} },\n          series: [\n              {\n                  name: 'P',\n                  data: [[0, b], [maxXValue, b]], // Horizontal P\n                  color: 'green',\n                  marker: { enabled: false }\n              },\n              {\n                  name: 'GROMS',\n                  data: [[0, b], [maxXValue, b]], // Horizontal GROMS (same as P)\n                  color: 'blue',\n                  marker: { enabled: false }\n              },\n              {\n                  name: 'GROMK',\n                  data: [[0, bg], [maxXValue, ag * maxXValue + bg]], // GROMK line\n                  color: 'red',\n                  marker: { enabled: false }\n              },\n              // Add optimal point if calculated (ox for a=0)\n              // { name: 'Optimal', type: 'scatter', data: [[ox, b]], color: 'black' }\n          ],\n          // ... Other options ...\n      };\n  } else {\n      // --- Logic for standard case (a < 0) or other scenarios --- \n      // Recalculate chartOptions for the non-perfect competition case\n      console.log(\"Calculating standard chart options\");\n      // Define your standard series for P, GROMS, GROMK based on a, b, ag, bg\n      // This part should resemble your previous working chart options for a != 0\n       let maxYValue = Math.max(300, b * 1.5, bg * 1.5);\n       let maxXValue = Math.max(100, -b/a * 1.5); // Example scaling\n       \n      chartOptions = {\n          // ... Base options ...\n           xAxis: { min: 0, max: maxXValue, title: {text: 'Mængde'} },\n           yAxis: { min: 0, max: maxYValue, title: {text: 'DKK'} },\n           series: [\n               {\n                   name: 'P',\n                   data: [[0, b], [-b/a, 0]].filter(p => isFinite(p[0]) && isFinite(p[1])),\n                   color: 'green',\n                   marker: { enabled: false }\n               },\n               {\n                   name: 'GROMS',\n                   data: [[0, b], [-0.5*b/a, 0]].filter(p => isFinite(p[0]) && isFinite(p[1])),\n                   color: 'blue',\n                   marker: { enabled: false }\n               },\n               {\n                   name: 'GROMK',\n                   data: [[0, bg], [maxXValue, ag * maxXValue + bg]],\n                   color: 'red',\n                   marker: { enabled: false }\n               },\n                // Add optimal point if calculated (standard ox, op)\n               // { name: 'Optimal', type: 'scatter', data: [[ox, op]], color: 'black' }\n           ],\n          // ... Other options ...\n      };\n  }\n\n  // --- Return JSX --- \n  return (\n    <Container className=\"p-3\">\n        {/* ... Your existing JSX for inputs, toggles, etc. ... */}\n        \n        <Row className=\"mt-4\">\n            <Col>\n                {/* Pass the dynamically calculated chartOptions here */} \n                <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </Col>\n        </Row>\n\n        {/* ... Your existing JSX for results table ... */}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}